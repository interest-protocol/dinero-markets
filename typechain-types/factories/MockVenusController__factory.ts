/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockVenusController,
  MockVenusControllerInterface,
} from "../MockVenusController";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract MockERC20",
        name: "xvs",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vToken",
        type: "address",
      },
    ],
    name: "EnterMarket",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vToken",
        type: "address",
      },
    ],
    name: "ExitMarket",
    type: "event",
  },
  {
    inputs: [],
    name: "XVS",
    outputs: [
      {
        internalType: "contract MockERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "__setClaimVenusValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "__setEnterMarketReturn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "__setExitMarketReturn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "error",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shortfall",
        type: "uint256",
      },
    ],
    name: "__setLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isListed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "collateralFactorMantissa",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "accountMembership",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isVenus",
        type: "bool",
      },
    ],
    name: "__setMarkets",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "__setVenusSpeeds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    name: "claimVenus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimVenus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_markets",
        type: "address[]",
      },
    ],
    name: "enterMarkets",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vToken",
        type: "address",
      },
    ],
    name: "exitMarket",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getAccountLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "error",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shortfall",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "markets",
    outputs: [
      {
        internalType: "bool",
        name: "isListed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "collateralFactorMantissa",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isVenus",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "venusSpeeds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161087f38038061087f83398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516107ed61009260003960008181610314015261037801526107ed6000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638e8f294b11610097578063c18f021c11610066578063c18f021c14610271578063c2998238146102dc578063ede4edd0146102fc578063f86a1c521461030f57600080fd5b80638e8f294b146101cf5780639e9424b714610223578063abf21c861461024d578063adcd5fb91461026057600080fd5b8063207adcfd116100d3578063207adcfd146101785780635ec88c791461018b5780636d242d21146101a957806386df31ee146101bc57600080fd5b80631a686502146100fa5780631abcaa771461012c5780631e3894431461015a575b600080fd5b60005460015460025461010c92919083565b604080519384526020840192909252908201526060015b60405180910390f35b61014c61013a366004610554565b60046020526000908152604090205481565b604051908152602001610123565b610176610168366004610576565b600092909255600155600255565b005b6101766101863660046105a2565b600755565b61010c610199366004610554565b6000546001546002549193909250565b6101766101b73660046105a2565b600655565b6101766101ca366004610607565b61034e565b6102046101dd366004610554565b600360208190526000918252604090912080546001820154919092015460ff928316921683565b6040805193151584526020840192909252151590820152606001610123565b61017661023136600461065a565b6001600160a01b03909116600090815260046020526040902055565b61017661025b3660046105a2565b600555565b61017661026e366004610554565b50565b61017661027f366004610694565b6001600160a01b039094166000908152600360208181526040808420805497151560ff1998891617815560018101969096556002860190915290912080549215159285169290921790915501805492151592909116919091179055565b6102ef6102ea3660046106f2565b610422565b6040516101239190610734565b61014c61030a366004610554565b6104f1565b6103367f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610123565b6006546040516340c10f1960e01b81526001600160a01b03858116600483015260248201929092527f0000000000000000000000000000000000000000000000000000000000000000909116906340c10f1990604401600060405180830381600087803b1580156103be57600080fd5b505af11580156103d2573d6000803e3d6000fd5b5050600654604080516001600160a01b038816815260208101929092527f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d4935001905060405180910390a1505050565b60608160005b818110156104a5577fa9e7bef3df8c8719da7731bc4c6075c246cffb30273d3c675a56d4e04f6fcbf785858381811061046357610463610778565b90506020020160208101906104789190610554565b6040516001600160a01b03909116815260200160405180910390a18061049d8161078e565b915050610428565b5060408051600180825281830190925260009160208083019080368337019050509050600554816000815181106104de576104de610778565b6020908102919091010152949350505050565b6040516001600160a01b03821681526000907f8f403ca4333156009f60f9b33f855d4364a8f9b8b613acafbe7d5893ac8e80d39060200160405180910390a1505060075490565b80356001600160a01b038116811461054f57600080fd5b919050565b60006020828403121561056657600080fd5b61056f82610538565b9392505050565b60008060006060848603121561058b57600080fd5b505081359360208301359350604090920135919050565b6000602082840312156105b457600080fd5b5035919050565b60008083601f8401126105cd57600080fd5b50813567ffffffffffffffff8111156105e557600080fd5b6020830191508360208260051b850101111561060057600080fd5b9250929050565b60008060006040848603121561061c57600080fd5b61062584610538565b9250602084013567ffffffffffffffff81111561064157600080fd5b61064d868287016105bb565b9497909650939450505050565b6000806040838503121561066d57600080fd5b61067683610538565b946020939093013593505050565b8035801515811461054f57600080fd5b600080600080600060a086880312156106ac57600080fd5b6106b586610538565b94506106c360208701610684565b9350604086013592506106d860608701610684565b91506106e660808701610684565b90509295509295909350565b6000806020838503121561070557600080fd5b823567ffffffffffffffff81111561071c57600080fd5b610728858286016105bb565b90969095509350505050565b6020808252825182820181905260009190848201906040850190845b8181101561076c57835183529284019291840191600101610750565b50909695505050505050565b634e487b7160e01b600052603260045260246000fd5b60006000198214156107b057634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212207ebfe055fac872b065757eaace0152b9771eeddb07233cbfde87d0dde89d315b64736f6c634300080a0033";

type MockVenusControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockVenusControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockVenusController__factory extends ContractFactory {
  constructor(...args: MockVenusControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MockVenusController";
  }

  deploy(
    xvs: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockVenusController> {
    return super.deploy(xvs, overrides || {}) as Promise<MockVenusController>;
  }
  getDeployTransaction(
    xvs: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(xvs, overrides || {});
  }
  attach(address: string): MockVenusController {
    return super.attach(address) as MockVenusController;
  }
  connect(signer: Signer): MockVenusController__factory {
    return super.connect(signer) as MockVenusController__factory;
  }
  static readonly contractName: "MockVenusController";
  public readonly contractName: "MockVenusController";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockVenusControllerInterface {
    return new utils.Interface(_abi) as MockVenusControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockVenusController {
    return new Contract(address, _abi, signerOrProvider) as MockVenusController;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockSimplePair,
  MockSimplePairInterface,
} from "../MockSimplePair";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token1",
        type: "address",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    name: "setReserves",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setTotalSupply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token0",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token1",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161055438038061055483398101604081905261002f91610146565b600180546001600160a01b038086166001600160a01b0319928316179092556002805492851692909116919091179055805161007290600090602084019061007b565b50505050610274565b82805461008790610239565b90600052602060002090601f0160209004810192826100a957600085556100ef565b82601f106100c257805160ff19168380011785556100ef565b828001600101855582156100ef579182015b828111156100ef5782518255916020019190600101906100d4565b506100fb9291506100ff565b5090565b5b808211156100fb5760008155600101610100565b80516001600160a01b038116811461012b57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561015b57600080fd5b61016484610114565b92506020610173818601610114565b60408601519093506001600160401b038082111561019057600080fd5b818701915087601f8301126101a457600080fd5b8151818111156101b6576101b6610130565b604051601f8201601f19908116603f011681019083821181831017156101de576101de610130565b816040528281528a868487010111156101f657600080fd5b600093505b8284101561021857848401860151818501870152928501926101fb565b828411156102295760008684830101525b8096505050505050509250925092565b600181811c9082168061024d57607f821691505b6020821081141561026e57634e487b7160e01b600052602260045260246000fd5b50919050565b6102d1806102836000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638392b8c01161005b5780638392b8c0146100ec57806395d89b4114610107578063d21220a71461011c578063f7ea7a3d1461012f57600080fd5b80630902f1ac146100825780630dfe1681146100aa57806318160ddd146100d5575b600080fd5b6003546004546040805192835260208301919091526001908201526060015b60405180910390f35b6001546100bd906001600160a01b031681565b6040516001600160a01b0390911681526020016100a1565b6100de60055481565b6040519081526020016100a1565b6101056100fa3660046101d0565b600391909155600455565b005b61010f610142565b6040516100a191906101f2565b6002546100bd906001600160a01b031681565b61010561013d366004610247565b600555565b6000805461014f90610260565b80601f016020809104026020016040519081016040528092919081815260200182805461017b90610260565b80156101c85780601f1061019d576101008083540402835291602001916101c8565b820191906000526020600020905b8154815290600101906020018083116101ab57829003601f168201915b505050505081565b600080604083850312156101e357600080fd5b50508035926020909101359150565b600060208083528351808285015260005b8181101561021f57858101830151858201604001528201610203565b81811115610231576000604083870101525b50601f01601f1916929092016040019392505050565b60006020828403121561025957600080fd5b5035919050565b600181811c9082168061027457607f821691505b6020821081141561029557634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220e04c019bbc8dfc617e8021c92802d184a4394cf6e93e2d43724a7b048093c17264736f6c634300080a0033";

type MockSimplePairConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockSimplePairConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockSimplePair__factory extends ContractFactory {
  constructor(...args: MockSimplePairConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MockSimplePair";
  }

  deploy(
    _token0: string,
    _token1: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockSimplePair> {
    return super.deploy(
      _token0,
      _token1,
      _symbol,
      overrides || {}
    ) as Promise<MockSimplePair>;
  }
  getDeployTransaction(
    _token0: string,
    _token1: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _token0,
      _token1,
      _symbol,
      overrides || {}
    );
  }
  attach(address: string): MockSimplePair {
    return super.attach(address) as MockSimplePair;
  }
  connect(signer: Signer): MockSimplePair__factory {
    return super.connect(signer) as MockSimplePair__factory;
  }
  static readonly contractName: "MockSimplePair";
  public readonly contractName: "MockSimplePair";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockSimplePairInterface {
    return new utils.Interface(_abi) as MockSimplePairInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockSimplePair {
    return new Contract(address, _abi, signerOrProvider) as MockSimplePair;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LPVault, LPVaultInterface } from "../LPVault";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "Compound",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "CAKE",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CAKE_MASTER_CHEF",
    outputs: [
      {
        internalType: "contract IMasterChef",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MARKET",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POOL_ID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STAKING_TOKEN",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "compound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getPendingRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getUserPendingRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMasterChef",
        name: "cakeMasterChef",
        type: "address",
      },
      {
        internalType: "contract IERC20Upgradeable",
        name: "cake",
        type: "address",
      },
      {
        internalType: "contract IERC20Upgradeable",
        name: "stakingToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "poolId",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "setMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalRewardsPerAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5060805161266161004c600039600081816105430152818161058c0152818161062c0152818161066c01526106ff01526126616000f3fe6080604052600436106101355760003560e01c80638340f549116100ab578063d9621f9e1161006f578063d9621f9e1461035b578063d9caed1214610370578063e0d7d0e914610390578063f2fde38b146103a7578063f46f16c2146103c7578063f69e2046146103e757600080fd5b80638340f549146102c75780638c3061bf146102e75780638da5cb5b146102fd578063cf756fdf1461031b578063cf7c11fa1461033b57600080fd5b80633659cfe6116100fd5780633659cfe61461022a5780634ca6ef281461024a5780634f1ef2861461026a57806352d1902d1461027d5780636dcea85f14610292578063715018a6146102b257600080fd5b80630479d6441461013a57806312424e3f146101785780631959a0021461018f5780631a39d8ef146101e6578063286bf1e21461020a575b600080fd5b34801561014657600080fd5b506101015461015b906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561018457600080fd5b5061018d6103fc565b005b34801561019b57600080fd5b506101cb6101aa3660046121f9565b60cc6020526000908152604090208054600182015460029092015490919083565b6040805193845260208401929092529082015260600161016f565b3480156101f257600080fd5b506101fc60cd5481565b60405190815260200161016f565b34801561021657600080fd5b5060c95461015b906001600160a01b031681565b34801561023657600080fd5b5061018d6102453660046121f9565b610538565b34801561025657600080fd5b5060ca5461015b906001600160a01b031681565b61018d61027836600461222c565b610621565b34801561028957600080fd5b506101fc6106f2565b34801561029e57600080fd5b5061018d6102ad3660046121f9565b6107a5565b3480156102be57600080fd5b5061018d610843565b3480156102d357600080fd5b5061018d6102e23660046122f0565b610877565b3480156102f357600080fd5b506101fc60ce5481565b34801561030957600080fd5b506033546001600160a01b031661015b565b34801561032757600080fd5b5061018d610336366004612331565b61095a565b34801561034757600080fd5b506101fc6103563660046121f9565b610ad1565b34801561036757600080fd5b506101fc610b85565b34801561037c57600080fd5b5061018d61038b3660046122f0565b610c80565b34801561039c57600080fd5b506101fc6101025481565b3480156103b357600080fd5b5061018d6103c23660046121f9565b610da3565b3480156103d357600080fd5b5060cb5461015b906001600160a01b031681565b3480156103f357600080fd5b5061018d610e3b565b60c95461010154604051636eb1769f60e11b81523060048201526001600160a01b039283166024820181905261049a939092169063dd62ed3e90604401602060405180830381865afa158015610456573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047a9190612382565b610486906000196123b1565b610101546001600160a01b03169190610f6d565b60c95460ca54604051636eb1769f60e11b81523060048201526001600160a01b0392831660248201819052610536939092169063dd62ed3e90604401602060405180830381865afa1580156104f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105179190612382565b610523906000196123b1565b60ca546001600160a01b03169190610f6d565b565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561058a5760405162461bcd60e51b8152600401610581906123c8565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166105d36000805160206125e5833981519152546001600160a01b031690565b6001600160a01b0316146105f95760405162461bcd60e51b815260040161058190612414565b61060281611058565b6040805160008082526020820190925261061e91839190611082565b50565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561066a5760405162461bcd60e51b8152600401610581906123c8565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166106b36000805160206125e5833981519152546001600160a01b031690565b6001600160a01b0316146106d95760405162461bcd60e51b815260040161058190612414565b6106e282611058565b6106ee82826001611082565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107925760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610581565b506000805160206125e583398151915290565b6107ad6111ed565b6001600160a01b0381166107d35760405162461bcd60e51b815260040161058190612460565b60cb546001600160a01b0316156108215760405162461bcd60e51b815260206004820152601260248201527115985d5b1d0e88185b1c9958591e481cd95d60721b6044820152606401610581565b60cb80546001600160a01b0319166001600160a01b0392909216919091179055565b6033546001600160a01b0316331461086d5760405162461bcd60e51b815260040161058190612490565b6105366000611217565b60cb546001600160a01b031633146108c65760405162461bcd60e51b815260206004820152601260248201527115985d5b1d0e881bdb9b1e481b585c9ad95d60721b6044820152606401610581565b6000811161090e5760405162461bcd60e51b815260206004820152601560248201527415985d5b1d0e881b9bc81e995c9bc8185b5bdd5b9d605a1b6044820152606401610581565b6001600160a01b0383161580159061092e57506001600160a01b03821615155b61094a5760405162461bcd60e51b815260040161058190612460565b610955838383611269565b505050565b600054610100900460ff166109755760005460ff1615610979565b303b155b6109dc5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610581565b600054610100900460ff161580156109fe576000805461ffff19166101011790555b610a066114c0565b81610a535760405162461bcd60e51b815260206004820152601b60248201527f4c505661756c743a20746869732069732061204c50207661756c7400000000006044820152606401610581565b60c980546001600160a01b038088166001600160a01b03199283161790925560ca805487841690831617905561010180549286169290911682179055610102839055610aa290866000196114ef565b610ab86001600160a01b038516866000196114ef565b8015610aca576000805461ff00191690555b5050505050565b60cd5460009080610ae55750600092915050565b60ce546001600160a01b038416600090815260cc60209081526040808320815160608101835281548152600182015493810193909352600201549082015290610b3684610b30610b85565b90611604565b6020830151835191925090610b5590610b4f84876124c5565b90611620565b610b5f91906123b1565b610b6990866124c5565b9450816040015185610b7b91906124c5565b9695505050505050565b60c954604051631175a1dd60e01b8152600060048201819052306024830152916001600160a01b031690631175a1dd90604401602060405180830381865afa158015610bd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf99190612382565b60c95461010254604051631175a1dd60e01b815260048101919091523060248201526001600160a01b0390911690631175a1dd90604401602060405180830381865afa158015610c4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c719190612382565b610c7b91906124c5565b905090565b60cb546001600160a01b03163314610ccf5760405162461bcd60e51b815260206004820152601260248201527115985d5b1d0e881bdb9b1e481b585c9ad95d60721b6044820152606401610581565b60008111610d175760405162461bcd60e51b815260206004820152601560248201527415985d5b1d0e881b9bc81e995c9bc8185b5bdd5b9d605a1b6044820152606401610581565b6001600160a01b03831615801590610d3757506001600160a01b03821615155b610d535760405162461bcd60e51b815260040161058190612460565b600060cd5411610d985760405162461bcd60e51b815260206004820152601060248201526f5661756c743a206e6f20746f6b656e7360801b6044820152606401610581565b610955838383611635565b6033546001600160a01b03163314610dcd5760405162461bcd60e51b815260040161058190612490565b6001600160a01b038116610e325760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610581565b61061e81611217565b60ce5460cd5460009190610e4e83611958565b610e5890846124c5565b9250610e6460006119e2565b610e6e90846124c5565b92506000610e838466470de4df820000611620565b9050610e9382610b3083876123b1565b610e9d90846124c5565b9250610eb63360ca546001600160a01b03169083611a60565b60c9546001600160a01b03166341441d3b610ecf611a90565b6040518263ffffffff1660e01b8152600401610eed91815260200190565b600060405180830381600087803b158015610f0757600080fd5b505af1158015610f1b573d6000803e3d6000fd5b50505060ce84905550437f27aaed1e2ace6cfa5a07a3dc6557aed2566349b8a63e8bc208943164c6bb615f610f5083876123b1565b60408051918252602082018590520160405180910390a250505050565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015610fbe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe29190612382565b610fec91906124c5565b6040516001600160a01b03851660248201526044810182905290915061105290859063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611afd565b50505050565b6033546001600160a01b0316331461061e5760405162461bcd60e51b815260040161058190612490565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156110b55761095583611bcf565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561110f575060408051601f3d908101601f1916820190925261110c91810190612382565b60015b6111725760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610581565b6000805160206125e583398151915281146111e15760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610581565b50610955838383611c6b565b6033546001600160a01b031633146105365760405162461bcd60e51b815260040161058190612490565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216600090815260cc6020908152604091829020825160608101845281548152600182015492810192909252600201549181019190915260cd5460ce5481156112e7576112c282610b306000611958565b6112cc90826124c5565b90506112da82610b30611c90565b6112e490826124c5565b90505b82511561131f5760208301518351611300908390611620565b61130a91906123b1565b8360400181815161131b91906124c5565b9052505b61132984836124c5565b9150838360000181815161133d91906124c5565b90525061010154611359906001600160a01b0316873087611d04565b60c95461010254604051631c57762b60e31b81526001600160a01b039092169163e2bbb15891611396918890600401918252602082015260400190565b600060405180830381600087803b1580156113b057600080fd5b505af11580156113c4573d6000803e3d6000fd5b505060c9546001600160a01b031691506341441d3b90506113e3611a90565b6040518263ffffffff1660e01b815260040161140191815260200190565b600060405180830381600087803b15801561141b57600080fd5b505af115801561142f573d6000803e3d6000fd5b505084516114409250839150611620565b60208481019182526001600160a01b03878116600081815260cc845260409081902088518155945160018601558088015160029095019490945560cd86905560ce8590559251878152908916917f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62910160405180910390a3505050505050565b600054610100900460ff166114e75760405162461bcd60e51b8152600401610581906124dd565b610536611d3c565b8015806115695750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015611543573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115679190612382565b155b6115d45760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610581565b6040516001600160a01b03831660248201526044810182905261095590849063095ea7b360e01b9060640161101b565b600061161983670de0b6b3a764000084611d6c565b9392505050565b60006116198383670de0b6b3a7640000611d6c565b6001600160a01b038316600090815260cc602090815260409182902082516060810184528154808252600183015493820193909352600290910154928101929092528211156116c65760405162461bcd60e51b815260206004820152601860248201527f5661756c743a206e6f7420656e6f75676820746f6b656e7300000000000000006044820152606401610581565b60cd5460ce546116d982610b3086611ee6565b6116e390826124c5565b90506116f382610b3060006119e2565b6116fd90826124c5565b60208401518451919250600091611715908490611620565b61171f91906123b1565b905061172b85846123b1565b9250848460000181815161173f91906123b1565b905250604084015161175190826124c5565b600060408601819052909150611765611a90565b9050818110156117db5760c9546001600160a01b0316631058d28161178a83856123b1565b6040518263ffffffff1660e01b81526004016117a891815260200190565b600060405180830381600087803b1580156117c257600080fd5b505af11580156117d6573d6000803e3d6000fd5b505050505b60ca546117f2906001600160a01b03168984611a60565b6000841180156118115750670de0b6b3a764000061180e611a90565b10155b156118805760c9546001600160a01b03166341441d3b61182f611a90565b6040518263ffffffff1660e01b815260040161184d91815260200190565b600060405180830381600087803b15801561186757600080fd5b505af115801561187b573d6000803e3d6000fd5b505050505b83156118a75760ce8390558451611898908490611620565b602086015260cd8490556118bd565b600060cd81905560ce8190556020860181905285525b6001600160a01b03808916600090815260cc602090815260409182902088518155908801516001820155908701516002909101556101015461190191168888611a60565b866001600160a01b0316886001600160a01b03167f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb8860405161194691815260200190565b60405180910390a35050505050505050565b600080611963611a90565b60c95461010254604051631c57762b60e31b81526004810191909152602481018690529192506001600160a01b03169063e2bbb158906044015b600060405180830381600087803b1580156119b757600080fd5b505af11580156119cb573d6000803e3d6000fd5b50505050806119d8611a90565b61161991906123b1565b6000806119ed611a90565b60c954604051631058d28160e01b8152600481018690529192506001600160a01b031690631058d28190602401600060405180830381600087803b158015611a3457600080fd5b505af1158015611a48573d6000803e3d6000fd5b505050508281611a56611a90565b6119d891906123b1565b6040516001600160a01b03831660248201526044810182905261095590849063a9059cbb60e01b9060640161101b565b60ca546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611ad9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7b9190612382565b6000611b52826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611f2f9092919063ffffffff16565b8051909150156109555780806020019051810190611b709190612528565b6109555760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610581565b6001600160a01b0381163b611c3c5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610581565b6000805160206125e583398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611c7483611f46565b600082511180611c815750805b15610955576110528383611f86565b60c9546000906001600160a01b03166341441d3b611cac611a90565b6040518263ffffffff1660e01b8152600401611cca91815260200190565b600060405180830381600087803b158015611ce457600080fd5b505af1158015611cf8573d6000803e3d6000fd5b50505050610c7b611a90565b6040516001600160a01b03808516602483015283166044820152606481018290526110529085906323b872dd60e01b9060840161101b565b600054610100900460ff16611d635760405162461bcd60e51b8152600401610581906124dd565b61053633611217565b600080806000198587098587029250828110838203039150508060001415611da65760008411611d9b57600080fd5b508290049050611619565b808411611db257600080fd5b6000848688098084039381119092039190506000611dd2861960016124c5565b8616958690049593849004936000819003046001019050611df3818461254a565b909317926000611e0487600361254a565b6002189050611e13818861254a565b611e1e9060026123b1565b611e28908261254a565b9050611e34818861254a565b611e3f9060026123b1565b611e49908261254a565b9050611e55818861254a565b611e609060026123b1565b611e6a908261254a565b9050611e76818861254a565b611e819060026123b1565b611e8b908261254a565b9050611e97818861254a565b611ea29060026123b1565b611eac908261254a565b9050611eb8818861254a565b611ec39060026123b1565b611ecd908261254a565b9050611ed9818661254a565b9998505050505050505050565b600080611ef1611a90565b60c95461010254604051630441a3e760e41b81526004810191909152602481018690529192506001600160a01b03169063441a3e709060440161199d565b6060611f3e848460008561207a565b949350505050565b611f4f81611bcf565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b611fee5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610581565b600080846001600160a01b0316846040516120099190612595565b600060405180830381855af49150503d8060008114612044576040519150601f19603f3d011682016040523d82523d6000602084013e612049565b606091505b50915091506120718282604051806060016040528060278152602001612605602791396121ab565b95945050505050565b6060824710156120db5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610581565b6001600160a01b0385163b6121325760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610581565b600080866001600160a01b0316858760405161214e9190612595565b60006040518083038185875af1925050503d806000811461218b576040519150601f19603f3d011682016040523d82523d6000602084013e612190565b606091505b50915091506121a08282866121ab565b979650505050505050565b606083156121ba575081611619565b8251156121ca5782518084602001fd5b8160405162461bcd60e51b815260040161058191906125b1565b6001600160a01b038116811461061e57600080fd5b60006020828403121561220b57600080fd5b8135611619816121e4565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561223f57600080fd5b823561224a816121e4565b9150602083013567ffffffffffffffff8082111561226757600080fd5b818501915085601f83011261227b57600080fd5b81358181111561228d5761228d612216565b604051601f8201601f19908116603f011681019083821181831017156122b5576122b5612216565b816040528281528860208487010111156122ce57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60008060006060848603121561230557600080fd5b8335612310816121e4565b92506020840135612320816121e4565b929592945050506040919091013590565b6000806000806080858703121561234757600080fd5b8435612352816121e4565b93506020850135612362816121e4565b92506040850135612372816121e4565b9396929550929360600135925050565b60006020828403121561239457600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156123c3576123c361239b565b500390565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6020808252601690820152755661756c743a206e6f207a65726f206164647265737360501b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156124d8576124d861239b565b500190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60006020828403121561253a57600080fd5b8151801515811461161957600080fd5b60008160001904831182151516156125645761256461239b565b500290565b60005b8381101561258457818101518382015260200161256c565b838111156110525750506000910152565b600082516125a7818460208701612569565b9190910192915050565b60208152600082518060208401526125d0816040850160208701612569565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220c8d2c1bc0770c1f7157315134169969b01f548f6587a23f3c54642f8dfbf390864736f6c634300080a0033";

type LPVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LPVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LPVault__factory extends ContractFactory {
  constructor(...args: LPVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "LPVault";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LPVault> {
    return super.deploy(overrides || {}) as Promise<LPVault>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LPVault {
    return super.attach(address) as LPVault;
  }
  connect(signer: Signer): LPVault__factory {
    return super.connect(signer) as LPVault__factory;
  }
  static readonly contractName: "LPVault";
  public readonly contractName: "LPVault";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LPVaultInterface {
    return new utils.Interface(_abi) as LPVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LPVault {
    return new Contract(address, _abi, signerOrProvider) as LPVault;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ReentrantNFTMarketBorrowerStartLoan,
  ReentrantNFTMarketBorrowerStartLoanInterface,
} from "../ReentrantNFTMarketBorrowerStartLoan";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract INFTMarket",
        name: "_contract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Contract",
    outputs: [
      {
        internalType: "contract INFTMarket",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "proposer",
        type: "address",
      },
    ],
    name: "borrowerStartLoan",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "address",
        name: "loanToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "principal",
        type: "uint128",
      },
      {
        internalType: "uint64",
        name: "interestRate",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "maturity",
        type: "uint64",
      },
    ],
    name: "proposeLoan",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161045838038061045883398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6103c5806100936000396000f3fe6080604052600436106100385760003560e01c806330b1f406146100b05780635af77fff146100d257806376b276211461010e57600080fd5b366100ab5760008054604051631858fa0360e11b8152600481018390526024810183905260448101929092526001600160a01b0316906330b1f40690606401600060405180830381600087803b15801561009157600080fd5b505af11580156100a5573d6000803e3d6000fd5b50505050005b600080fd5b3480156100bc57600080fd5b506100d06100cb3660046102c0565b61012e565b005b3480156100de57600080fd5b506000546100f2906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b34801561011a57600080fd5b506100d0610129366004610314565b6101a1565b600054604051631858fa0360e11b81526001600160a01b038581166004830152602482018590528381166044830152909116906330b1f40690606401600060405180830381600087803b15801561018457600080fd5b505af1158015610198573d6000803e3d6000fd5b50505050505050565b60005460405163095ea7b360e01b81526001600160a01b039182166004820152602481018690529087169063095ea7b390604401600060405180830381600087803b1580156101ef57600080fd5b505af1158015610203573d6000803e3d6000fd5b50506000546040516376b2762160e01b81526001600160a01b038a811660048301528981166024830152604482018990526001600160801b038816606483015267ffffffffffffffff8088166084840152861660a483015290911692506376b27621915060c401600060405180830381600087803b15801561028457600080fd5b505af1158015610298573d6000803e3d6000fd5b50505050505050505050565b80356001600160a01b03811681146102bb57600080fd5b919050565b6000806000606084860312156102d557600080fd5b6102de846102a4565b9250602084013591506102f3604085016102a4565b90509250925092565b803567ffffffffffffffff811681146102bb57600080fd5b60008060008060008060c0878903121561032d57600080fd5b610336876102a4565b9550610344602088016102a4565b94506040870135935060608701356001600160801b038116811461036757600080fd5b9250610375608088016102fc565b915061038360a088016102fc565b9050929550929550929556fea26469706673582212202330d527197eb667fbc51b76004afe29b335d1f3b8555e6df49af98815aa39ad64736f6c634300080a0033";

type ReentrantNFTMarketBorrowerStartLoanConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReentrantNFTMarketBorrowerStartLoanConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReentrantNFTMarketBorrowerStartLoan__factory extends ContractFactory {
  constructor(...args: ReentrantNFTMarketBorrowerStartLoanConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ReentrantNFTMarketBorrowerStartLoan";
  }

  deploy(
    _contract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ReentrantNFTMarketBorrowerStartLoan> {
    return super.deploy(
      _contract,
      overrides || {}
    ) as Promise<ReentrantNFTMarketBorrowerStartLoan>;
  }
  getDeployTransaction(
    _contract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_contract, overrides || {});
  }
  attach(address: string): ReentrantNFTMarketBorrowerStartLoan {
    return super.attach(address) as ReentrantNFTMarketBorrowerStartLoan;
  }
  connect(signer: Signer): ReentrantNFTMarketBorrowerStartLoan__factory {
    return super.connect(
      signer
    ) as ReentrantNFTMarketBorrowerStartLoan__factory;
  }
  static readonly contractName: "ReentrantNFTMarketBorrowerStartLoan";
  public readonly contractName: "ReentrantNFTMarketBorrowerStartLoan";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReentrantNFTMarketBorrowerStartLoanInterface {
    return new utils.Interface(
      _abi
    ) as ReentrantNFTMarketBorrowerStartLoanInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReentrantNFTMarketBorrowerStartLoan {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ReentrantNFTMarketBorrowerStartLoan;
  }
}

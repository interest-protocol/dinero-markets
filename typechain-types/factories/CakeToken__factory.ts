/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CakeToken, CakeTokenInterface } from "../CakeToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DELEGATION_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "fromBlock",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "votes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegator",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getCurrentVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPriorVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051806040016040528060118152602001702830b731b0b5b2a9bbb0b8102a37b5b2b760791b8152506040518060400160405280600481526020016343616b6560e01b81525060006200006b620000f660201b60201c565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3508151620000ca906004906020850190620000fa565b508051620000e0906005906020840190620000fa565b50506006805460ff1916601217905550620001dd565b3390565b8280546200010890620001a0565b90600052602060002090601f0160209004810192826200012c576000855562000177565b82601f106200014757805160ff191683800117855562000177565b8280016001018555821562000177579182015b82811115620001775782518255916020019190600101906200015a565b506200018592915062000189565b5090565b5b808211156200018557600081556001016200018a565b600181811c90821680620001b557607f821691505b60208210811415620001d757634e487b7160e01b600052602260045260246000fd5b50919050565b611a4980620001ed6000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c8063782d6fe1116100f9578063a9059cbb11610097578063dd62ed3e11610071578063dd62ed3e146103e6578063e7a324dc1461041f578063f1127ed814610446578063f2fde38b1461049d57600080fd5b8063a9059cbb146103ad578063b4b5ea57146103c0578063c3cda520146103d357600080fd5b80638da5cb5b116100d35780638da5cb5b1461036e57806395d89b411461037f578063a0712d6814610387578063a457c2d71461039a57600080fd5b8063782d6fe11461033b5780637ecebe001461034e578063893d20e81461036e57600080fd5b806339509351116101665780635c19a95c116101405780635c19a95c146102bc5780636fcfff45146102cf57806370a082311461030a578063715018a61461033357600080fd5b8063395093511461025057806340c10f1914610263578063587cde1e1461027857600080fd5b806306fdde03146101ae578063095ea7b3146101cc57806318160ddd146101ef57806320606b701461020157806323b872dd14610228578063313ce5671461023b575b600080fd5b6101b66104b0565b6040516101c39190611645565b60405180910390f35b6101df6101da3660046116b1565b610542565b60405190151581526020016101c3565b6003545b6040519081526020016101c3565b6101f37f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b6101df6102363660046116db565b610559565b60065460405160ff90911681526020016101c3565b6101df61025e3660046116b1565b6105c2565b6102766102713660046116b1565b6105f8565b005b6102a4610286366004611717565b6001600160a01b039081166000908152600760205260409020541690565b6040516001600160a01b0390911681526020016101c3565b6102766102ca366004611717565b61065e565b6102f56102dd366004611717565b60096020526000908152604090205463ffffffff1681565b60405163ffffffff90911681526020016101c3565b6101f3610318366004611717565b6001600160a01b031660009081526001602052604090205490565b61027661066b565b6101f36103493660046116b1565b6106df565b6101f361035c366004611717565b600a6020526000908152604090205481565b6000546001600160a01b03166102a4565b6101b6610944565b6101df610395366004611732565b610953565b6101df6103a83660046116b1565b610991565b6101df6103bb3660046116b1565b6109e0565b6101f36103ce366004611717565b6109ed565b6102766103e136600461174b565b610a62565b6101f36103f43660046117ab565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6101f37fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf81565b6104816104543660046117de565b60086020908152600092835260408084209091529082529020805460019091015463ffffffff9091169082565b6040805163ffffffff90931683526020830191909152016101c3565b6102766104ab366004611717565b610d30565b6060600480546104bf9061181e565b80601f01602080910402602001604051908101604052809291908181526020018280546104eb9061181e565b80156105385780601f1061050d57610100808354040283529160200191610538565b820191906000526020600020905b81548152906001019060200180831161051b57829003601f168201915b5050505050905090565b600061054f338484610d63565b5060015b92915050565b6000610566848484610e88565b6105b884336105b38560405180606001604052806028815260200161196d602891396001600160a01b038a166000908152600260209081526040808320338452909152902054919061100e565b610d63565b5060019392505050565b3360008181526002602090815260408083206001600160a01b0387168452909152812054909161054f9185906105b39086611048565b6000546001600160a01b0316331461062b5760405162461bcd60e51b815260040161062290611859565b60405180910390fd5b61063582826110a7565b6001600160a01b0380831660009081526007602052604081205461065a92168361118d565b5050565b61066833826112f1565b50565b6000546001600160a01b031633146106955760405162461bcd60e51b815260040161062290611859565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60004382106107405760405162461bcd60e51b815260206004820152602760248201527f43414b453a3a6765745072696f72566f7465733a206e6f742079657420646574604482015266195c9b5a5b995960ca1b6064820152608401610622565b6001600160a01b03831660009081526009602052604090205463ffffffff168061076e576000915050610553565b6001600160a01b038416600090815260086020526040812084916107936001856118a4565b63ffffffff908116825260208201929092526040016000205416116107fc576001600160a01b0384166000908152600860205260408120906107d66001846118a4565b63ffffffff1663ffffffff16815260200190815260200160002060010154915050610553565b6001600160a01b038416600090815260086020908152604080832083805290915290205463ffffffff16831015610837576000915050610553565b6000806108456001846118a4565b90505b8163ffffffff168163ffffffff16111561090d576000600261086a84846118a4565b61087491906118c9565b61087e90836118a4565b6001600160a01b038816600090815260086020908152604080832063ffffffff80861685529083529281902081518083019092528054909316808252600190930154918101919091529192508714156108e1576020015194506105539350505050565b805163ffffffff168711156108f857819350610906565b6109036001836118a4565b92505b5050610848565b506001600160a01b038516600090815260086020908152604080832063ffffffff9094168352929052206001015491505092915050565b6060600580546104bf9061181e565b600080546001600160a01b0316331461097e5760405162461bcd60e51b815260040161062290611859565b61098833836110a7565b5060015b919050565b600061054f33846105b3856040518060600160405280602581526020016119ef602591393360009081526002602090815260408083206001600160a01b038d168452909152902054919061100e565b600061054f338484610e88565b6001600160a01b03811660009081526009602052604081205463ffffffff1680610a18576000610a5b565b6001600160a01b038316600090815260086020526040812090610a3c6001846118a4565b63ffffffff1663ffffffff168152602001908152602001600020600101545b9392505050565b60007f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866610a8d6104b0565b80519060200120610a9b4690565b60408051602080820195909552808201939093526060830191909152306080808401919091528151808403909101815260a0830182528051908401207fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60c08401526001600160a01b038b1660e084015261010083018a90526101208084018a90528251808503909101815261014084019092528151919093012061190160f01b610160830152610162820183905261018282018190529192506000906101a20160408051601f198184030181528282528051602091820120600080855291840180845281905260ff8a169284019290925260608301889052608083018790529092509060019060a0016020604051602081039080840390855afa158015610bc7573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610c395760405162461bcd60e51b815260206004820152602660248201527f43414b453a3a64656c656761746542795369673a20696e76616c6964207369676044820152656e617475726560d01b6064820152608401610622565b6001600160a01b0381166000908152600a60205260408120805491610c5d836118fa565b919050558914610cba5760405162461bcd60e51b815260206004820152602260248201527f43414b453a3a64656c656761746542795369673a20696e76616c6964206e6f6e604482015261636560f01b6064820152608401610622565b87421115610d195760405162461bcd60e51b815260206004820152602660248201527f43414b453a3a64656c656761746542795369673a207369676e617475726520656044820152651e1c1a5c995960d21b6064820152608401610622565b610d23818b6112f1565b505050505b505050505050565b6000546001600160a01b03163314610d5a5760405162461bcd60e51b815260040161062290611859565b61066881611371565b6001600160a01b038316610dc55760405162461bcd60e51b8152602060048201526024808201527f42455032303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610622565b6001600160a01b038216610e265760405162461bcd60e51b815260206004820152602260248201527f42455032303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610622565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038316610eec5760405162461bcd60e51b815260206004820152602560248201527f42455032303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610622565b6001600160a01b038216610f4e5760405162461bcd60e51b815260206004820152602360248201527f42455032303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610622565b610f8b816040518060600160405280602681526020016119c9602691396001600160a01b038616600090815260016020526040902054919061100e565b6001600160a01b038085166000908152600160205260408082209390935590841681522054610fba9082611048565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e7b9085815260200190565b600081848411156110325760405162461bcd60e51b81526004016106229190611645565b50600061103f8486611915565b95945050505050565b600080611055838561192c565b905083811015610a5b5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610622565b6001600160a01b0382166110fd5760405162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610622565b60035461110a9082611048565b6003556001600160a01b0382166000908152600160205260409020546111309082611048565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906111819085815260200190565b60405180910390a35050565b816001600160a01b0316836001600160a01b0316141580156111af5750600081115b156112ec576001600160a01b03831615611252576001600160a01b03831660009081526009602052604081205463ffffffff1690816111ef576000611232565b6001600160a01b0385166000908152600860205260408120906112136001856118a4565b63ffffffff1663ffffffff168152602001908152602001600020600101545b905060006112408285611431565b905061124e86848484611473565b5050505b6001600160a01b038216156112ec576001600160a01b03821660009081526009602052604081205463ffffffff16908161128d5760006112d0565b6001600160a01b0384166000908152600860205260408120906112b16001856118a4565b63ffffffff1663ffffffff168152602001908152602001600020600101545b905060006112de8285611048565b9050610d2885848484611473565b505050565b6001600160a01b03828116600081815260076020818152604080842080546001845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a461136b82848361118d565b50505050565b6001600160a01b0381166113d65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610622565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000610a5b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061100e565b60006114974360405180606001604052806034815260200161199560349139611615565b905060008463ffffffff161180156114f157506001600160a01b038516600090815260086020526040812063ffffffff8316916114d56001886118a4565b63ffffffff908116825260208201929092526040016000205416145b1561153a576001600160a01b0385166000908152600860205260408120839161151b6001886118a4565b63ffffffff1681526020810191909152604001600020600101556115ca565b60408051808201825263ffffffff838116825260208083018681526001600160a01b038a166000908152600883528581208a851682529092529390209151825463ffffffff191691161781559051600191820155611599908590611944565b6001600160a01b0386166000908152600960205260409020805463ffffffff191663ffffffff929092169190911790555b60408051848152602081018490526001600160a01b038716917fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724910160405180910390a25050505050565b600081640100000000841061163d5760405162461bcd60e51b81526004016106229190611645565b509192915050565b600060208083528351808285015260005b8181101561167257858101830151858201604001528201611656565b81811115611684576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461098c57600080fd5b600080604083850312156116c457600080fd5b6116cd8361169a565b946020939093013593505050565b6000806000606084860312156116f057600080fd5b6116f98461169a565b92506117076020850161169a565b9150604084013590509250925092565b60006020828403121561172957600080fd5b610a5b8261169a565b60006020828403121561174457600080fd5b5035919050565b60008060008060008060c0878903121561176457600080fd5b61176d8761169a565b95506020870135945060408701359350606087013560ff8116811461179157600080fd5b9598949750929560808101359460a0909101359350915050565b600080604083850312156117be57600080fd5b6117c78361169a565b91506117d56020840161169a565b90509250929050565b600080604083850312156117f157600080fd5b6117fa8361169a565b9150602083013563ffffffff8116811461181357600080fd5b809150509250929050565b600181811c9082168061183257607f821691505b6020821081141561185357634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600063ffffffff838116908316818110156118c1576118c161188e565b039392505050565b600063ffffffff808416806118ee57634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b600060001982141561190e5761190e61188e565b5060010190565b6000828210156119275761192761188e565b500390565b6000821982111561193f5761193f61188e565b500190565b600063ffffffff8083168185168083038211156119635761196361188e565b0194935050505056fe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636543414b453a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d6265722065786365656473203332206269747342455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220a43b7a299e2e28b5c75ba6ff49bbe6854c47512330275ba17980425d415f883864736f6c634300080a0033";

type CakeTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CakeTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CakeToken__factory extends ContractFactory {
  constructor(...args: CakeTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "CakeToken";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CakeToken> {
    return super.deploy(overrides || {}) as Promise<CakeToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CakeToken {
    return super.attach(address) as CakeToken;
  }
  connect(signer: Signer): CakeToken__factory {
    return super.connect(signer) as CakeToken__factory;
  }
  static readonly contractName: "CakeToken";
  public readonly contractName: "CakeToken";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CakeTokenInterface {
    return new utils.Interface(_abi) as CakeTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CakeToken {
    return new Contract(address, _abi, signerOrProvider) as CakeToken;
  }
}

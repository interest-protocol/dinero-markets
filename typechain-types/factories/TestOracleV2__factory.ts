/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestOracleV2, TestOracleV2Interface } from "../TestOracleV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "BNB_USD",
    outputs: [
      {
        internalType: "contract AggregatorV3Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BUSD",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TWAP",
    outputs: [
      {
        internalType: "contract PancakeOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WBNB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getBNBFeeds",
    outputs: [
      {
        internalType: "contract AggregatorV3Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "getBNBUSDPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPancakePair",
        name: "pair",
        type: "address",
      },
    ],
    name: "getLPTokenBNBPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPancakePair",
        name: "pair",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "getLPTokenPx",
    outputs: [
      {
        internalType: "uint256",
        name: "valueInBNB",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "valueInUSD",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "getTokenBNBPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "getTokenUSDPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getUSDFeeds",
    outputs: [
      {
        internalType: "contract AggregatorV3Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "getUSDPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "usdValue",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract PancakeOracle",
        name: "twap",
        type: "address",
      },
      {
        internalType: "contract AggregatorV3Interface",
        name: "bnb_usd",
        type: "address",
      },
      {
        internalType: "address",
        name: "wbnb",
        type: "address",
      },
      {
        internalType: "address",
        name: "busd",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "contract AggregatorV3Interface",
        name: "feed",
        type: "address",
      },
      {
        internalType: "enum OracleV1.FeedType",
        name: "feedType",
        type: "uint8",
      },
    ],
    name: "setFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5060805161233661004c600039600081816109420152818161098201528181610a2201528181610a620152610bce01526123366000f3fe60806040526004361061012a5760003560e01c806369dd6bea116100ab5780638dd950021161006f5780638dd9500214610369578063ae10561b14610389578063c2178267146103a9578063c5fa4f2f146103c9578063f2fde38b146103e9578063f8c8765e1461040957600080fd5b806369dd6bea146102ab5780636e73489b146102e0578063715018a614610316578063862ca7e21461032b5780638da5cb5b1461034b57600080fd5b80634f1ef286116100f25780634f1ef28614610212578063514559341461022557806352d1902d1461024557806354fd4d501461025a5780635a5e2a851461028b57600080fd5b806315e7ca641461012f578063257537c51461016257806329991939146101825780633659cfe6146101d0578063484f4ea9146101f2575b600080fd5b34801561013b57600080fd5b5061014f61014a366004611b20565b610429565b6040519081526020015b60405180910390f35b34801561016e57600080fd5b5061014f61017d366004611b3d565b61065e565b34801561018e57600080fd5b506101b861019d366004611b20565b60ce602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610159565b3480156101dc57600080fd5b506101f06101eb366004611b20565b610937565b005b3480156101fe57600080fd5b5060cc546101b8906001600160a01b031681565b6101f0610220366004611bd4565b610a17565b34801561023157600080fd5b5061014f610240366004611b3d565b610ae8565b34801561025157600080fd5b5061014f610bc1565b34801561026657600080fd5b5060408051808201825260028152612b1960f11b602082015290516101599190611c99565b34801561029757600080fd5b5061014f6102a6366004611b3d565b610c75565b3480156102b757600080fd5b506102cb6102c6366004611b3d565b610e8e565b60408051928352602083019190915201610159565b3480156102ec57600080fd5b506101b86102fb366004611b20565b60cd602052600090815260409020546001600160a01b031681565b34801561032257600080fd5b506101f0610ecf565b34801561033757600080fd5b5060c9546101b8906001600160a01b031681565b34801561035757600080fd5b506033546001600160a01b03166101b8565b34801561037557600080fd5b5060cb546101b8906001600160a01b031681565b34801561039557600080fd5b506101f06103a4366004611ccc565b610f05565b3480156103b557600080fd5b5060ca546101b8906001600160a01b031681565b3480156103d557600080fd5b5061014f6103e4366004611d1b565b610fac565b3480156103f557600080fd5b506101f0610404366004611b20565b61111e565b34801561041557600080fd5b506101f0610424366004611d34565b6111b6565b600080826001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561046a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048e9190611d90565b90506000836001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f49190611d90565b90506000846001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610536573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055a9190611dad565b9050600080866001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa15801561059d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c19190611ddd565b506001600160701b0391821693501690506000836105e76105e28486611e38565b6112c5565b6105f19190611e57565b9050600061060787670de0b6b3a7640000610c75565b9050600061061d87670de0b6b3a7640000610c75565b9050610628816112c5565b610631836112c5565b61063c856002611e38565b6106469190611e38565b6106509190611e38565b9a9950505050505050505050565b60006001600160a01b0383166106b55760405162461bcd60e51b81526020600482015260176024820152764f7261636c653a206e6f2061646472657373207a65726f60481b60448201526064015b60405180910390fd5b60cb546001600160a01b03848116911614156106db576106d482610fac565b9050610931565b6001600160a01b03808416600090815260cd602052604090819020548151633fabe5a360e21b81529151921691829163feaf968c9160048083019260a09291908290030181865afa925050508015610750575060408051601f3d908101601f1916820190925261074d91810190611e93565b60015b6108af5761075c611ee3565b806308c379a0141561083c5750610771611efe565b8061077c575061083e565b60cb5460c954604051632321bc7960e21b81526001600160a01b039283169260009261081592911690638c86f1e4906107bd908b908b908890600401611f88565b602060405180830381865afa1580156107da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fe9190611dad565b610810846001600160a01b0316611335565b61144b565b905061083261082b670de0b6b3a7640000610fac565b82906114ba565b945050505061092f565b505b3d808015610868576040519150601f19603f3d011682016040523d82523d6000602084013e61086d565b606091505b5060cb5460c954604051632321bc7960e21b81526001600160a01b039283169260009261081592911690638c86f1e4906107bd908b908b908890600401611f88565b610927886109216108bf876114cf565b896001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108109190611fab565b906114ba565b965050505050505b505b92915050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156109805760405162461bcd60e51b81526004016106ac90611fce565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166109c96000805160206122ba833981519152546001600160a01b031690565b6001600160a01b0316146109ef5760405162461bcd60e51b81526004016106ac9061201a565b6109f881611525565b60408051600080825260208201909252610a149183919061154f565b50565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161415610a605760405162461bcd60e51b81526004016106ac90611fce565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610aa96000805160206122ba833981519152546001600160a01b031690565b6001600160a01b031614610acf5760405162461bcd60e51b81526004016106ac9061201a565b610ad882611525565b610ae48282600161154f565b5050565b60007fd2d8c9be4057229e2281b901f5387b4a9e188ddd279c0b8a56346e366c965c6e836001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610b49573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b719190810190612066565b604051602001610b8191906120e8565b604051602081830303815290604052805190602001201415610bb057610ba78383610e8e565b91506109319050565b610bba838361065e565b9392505050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c615760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016106ac565b506000805160206122ba8339815191525b90565b60cb546000906001600160a01b0384811691161415610c95575080610931565b6001600160a01b038316610ce55760405162461bcd60e51b81526020600482015260176024820152764f7261636c653a206e6f2061646472657373207a65726f60481b60448201526064016106ac565b6001600160a01b03808416600090815260ce602052604090819020548151633fabe5a360e21b81529151921691829163feaf968c9160048083019260a09291908290030181865afa925050508015610d5a575060408051601f3d908101601f19168201909252610d5791810190611e93565b60015b6108af57610d66611ee3565b806308c379a01415610e1f5750610d7b611efe565b80610d865750610e21565b60cb5460c954604051632321bc7960e21b81526001600160a01b0392831692610e16921690638c86f1e490610dc3908a908a908790600401611f88565b602060405180830381865afa158015610de0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e049190611dad565b610810836001600160a01b0316611335565b9350505061092f565b505b3d808015610e4b576040519150601f19603f3d011682016040523d82523d6000602084013e610e50565b606091505b5060cb5460c954604051632321bc7960e21b81526001600160a01b0392831692610e16921690638c86f1e490610dc3908a908a908790600401611f88565b6000806000610e9c85610429565b9050610ea881856114ba565b9250610ec5610ebe670de0b6b3a7640000610fac565b84906114ba565b9150509250929050565b6033546001600160a01b03163314610ef95760405162461bcd60e51b81526004016106ac90612104565b610f0360006116ba565b565b6033546001600160a01b03163314610f2f5760405162461bcd60e51b81526004016106ac90612104565b6001816001811115610f4357610f43612139565b1415610f7857506001600160a01b03918216600090815260ce6020526040902080546001600160a01b03191691909216179055565b6001600160a01b03838116600090815260cd6020526040902080546001600160a01b0319169184169190911790555b505050565b60ca5460408051633fabe5a360e21b815290516000926001600160a01b031691829163feaf968c9160048082019260a0929091908290030181865afa925050508015611015575060408051601f3d908101601f1916820190925261101291810190611e93565b60015b61110257611021611ee3565b806308c379a0141561108d5750611036611efe565b80611041575061108f565b60cc5460c95460cb54604051632321bc7960e21b81526001600160a01b039384169361108493811692638c86f1e492610dc392909116908a908790600401611f88565b95945050505050565b505b3d8080156110b9576040519150601f19603f3d011682016040523d82523d6000602084013e6110be565b606091505b5060cc5460c95460cb54604051632321bc7960e21b81526001600160a01b039384169361108493811692638c86f1e492610dc392909116908a908790600401611f88565b611112886109216108bf876114cf565b98975050505050505050565b6033546001600160a01b031633146111485760405162461bcd60e51b81526004016106ac90612104565b6001600160a01b0381166111ad5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106ac565b610a14816116ba565b600054610100900460ff166111d15760005460ff16156111d5565b303b155b6112385760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106ac565b600054610100900460ff1615801561125a576000805461ffff19166101011790555b61126261170c565b60c980546001600160a01b038088166001600160a01b03199283161790925560ca805487841690831617905560cb805486841690831617905560cc80549285169290911691909117905580156112be576000805461ff00191690555b5050505050565b6000600382111561132657508060006112df600283611e57565b6112ea90600161214f565b90505b81811015611320579050806002816113058186611e57565b61130f919061214f565b6113199190611e57565b90506112ed565b50919050565b8115611330575060015b919050565b60006001600160a01b0382163b61138e5760405162461bcd60e51b815260206004820152601860248201527f496e7445524332303a206e6f74206120636f6e7472616374000000000000000060448201526064016106ac565b60408051600481526024810182526020810180516001600160e01b031663313ce56760e01b179052905160009182916001600160a01b038616916113d1916120e8565b600060405180830381855afa9150503d806000811461140c576040519150601f19603f3d011682016040523d82523d6000602084013e611411565b606091505b5091509150818015611424575080516020145b61142f576012611443565b808060200190518101906114439190611fab565b949350505050565b6000601260ff83168114156114635783915050610931565b808360ff1610156114985761147b60ff841682612167565b61148690600a612262565b6114909085611e38565b915050610931565b6114a58160ff8516612167565b6114b090600a612262565b6114439085611e57565b6000610bba8383670de0b6b3a764000061173b565b6000808212156115215760405162461bcd60e51b815260206004820181905260248201527f53616665436173743a2076616c7565206d75737420626520706f73697469766560448201526064016106ac565b5090565b6033546001600160a01b03163314610a145760405162461bcd60e51b81526004016106ac90612104565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561158257610fa7836118b5565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156115dc575060408051601f3d908101601f191682019092526115d991810190611dad565b60015b61163f5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016106ac565b6000805160206122ba83398151915281146116ae5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016106ac565b50610fa7838383611951565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166117335760405162461bcd60e51b81526004016106ac9061226e565b610f0361197c565b600080806000198587098587029250828110838203039150508060001415611775576000841161176a57600080fd5b508290049050610bba565b80841161178157600080fd5b60008486880980840393811190920391905060006117a18619600161214f565b86169586900495938490049360008190030460010190506117c28184611e38565b9093179260006117d3876003611e38565b60021890506117e28188611e38565b6117ed906002612167565b6117f79082611e38565b90506118038188611e38565b61180e906002612167565b6118189082611e38565b90506118248188611e38565b61182f906002612167565b6118399082611e38565b90506118458188611e38565b611850906002612167565b61185a9082611e38565b90506118668188611e38565b611871906002612167565b61187b9082611e38565b90506118878188611e38565b611892906002612167565b61189c9082611e38565b90506118a88186611e38565b9998505050505050505050565b6001600160a01b0381163b6119225760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016106ac565b6000805160206122ba83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b61195a836119ac565b6000825111806119675750805b15610fa75761197683836119ec565b50505050565b600054610100900460ff166119a35760405162461bcd60e51b81526004016106ac9061226e565b610f03336116ba565b6119b5816118b5565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b611a545760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016106ac565b600080846001600160a01b031684604051611a6f91906120e8565b600060405180830381855af49150503d8060008114611aaa576040519150601f19603f3d011682016040523d82523d6000602084013e611aaf565b606091505b509150915061108482826040518060600160405280602781526020016122da6027913960608315611ae1575081610bba565b825115611af15782518084602001fd5b8160405162461bcd60e51b81526004016106ac9190611c99565b6001600160a01b0381168114610a1457600080fd5b600060208284031215611b3257600080fd5b8135610bba81611b0b565b60008060408385031215611b5057600080fd5b8235611b5b81611b0b565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715611ba557611ba5611b69565b6040525050565b600067ffffffffffffffff821115611bc657611bc6611b69565b50601f01601f191660200190565b60008060408385031215611be757600080fd5b8235611bf281611b0b565b9150602083013567ffffffffffffffff811115611c0e57600080fd5b8301601f81018513611c1f57600080fd5b8035611c2a81611bac565b604051611c378282611b7f565b828152876020848601011115611c4c57600080fd5b82602085016020830137600060208483010152809450505050509250929050565b60005b83811015611c88578181015183820152602001611c70565b838111156119765750506000910152565b6020815260008251806020840152611cb8816040850160208701611c6d565b601f01601f19169190910160400192915050565b600080600060608486031215611ce157600080fd5b8335611cec81611b0b565b92506020840135611cfc81611b0b565b9150604084013560028110611d1057600080fd5b809150509250925092565b600060208284031215611d2d57600080fd5b5035919050565b60008060008060808587031215611d4a57600080fd5b8435611d5581611b0b565b93506020850135611d6581611b0b565b92506040850135611d7581611b0b565b91506060850135611d8581611b0b565b939692955090935050565b600060208284031215611da257600080fd5b8151610bba81611b0b565b600060208284031215611dbf57600080fd5b5051919050565b80516001600160701b038116811461133057600080fd5b600080600060608486031215611df257600080fd5b611dfb84611dc6565b9250611e0960208501611dc6565b9150604084015163ffffffff81168114611d1057600080fd5b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615611e5257611e52611e22565b500290565b600082611e7457634e487b7160e01b600052601260045260246000fd5b500490565b805169ffffffffffffffffffff8116811461133057600080fd5b600080600080600060a08688031215611eab57600080fd5b611eb486611e79565b9450602086015193506040860151925060608601519150611ed760808701611e79565b90509295509295909350565b600060033d1115610c725760046000803e5060005160e01c90565b600060443d1015611f0c5790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611f3c57505050505090565b8285019150815181811115611f545750505050505090565b843d8701016020828501011115611f6e5750505050505090565b611f7d60208286010187611b7f565b509095945050505050565b6001600160a01b0393841681526020810192909252909116604082015260600190565b600060208284031215611fbd57600080fd5b815160ff81168114610bba57600080fd5b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b60006020828403121561207857600080fd5b815167ffffffffffffffff81111561208f57600080fd5b8201601f810184136120a057600080fd5b80516120ab81611bac565b6040516120b88282611b7f565b8281528660208486010111156120cd57600080fd5b6120de836020830160208701611c6d565b9695505050505050565b600082516120fa818460208701611c6d565b9190910192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052602160045260246000fd5b6000821982111561216257612162611e22565b500190565b60008282101561217957612179611e22565b500390565b600181815b808511156121b957816000190482111561219f5761219f611e22565b808516156121ac57918102915b93841c9390800290612183565b509250929050565b6000826121d057506001610931565b816121dd57506000610931565b81600181146121f357600281146121fd57612219565b6001915050610931565b60ff84111561220e5761220e611e22565b50506001821b610931565b5060208310610133831016604e8410600b841016171561223c575081810a610931565b612246838361217e565b806000190482111561225a5761225a611e22565b029392505050565b6000610bba83836121c1565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220e3db9709c40f6a0bae5ca90fe984190d1149d7e56015679a3a15be0f4b70376e64736f6c634300080a0033";

type TestOracleV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestOracleV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestOracleV2__factory extends ContractFactory {
  constructor(...args: TestOracleV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TestOracleV2";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestOracleV2> {
    return super.deploy(overrides || {}) as Promise<TestOracleV2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestOracleV2 {
    return super.attach(address) as TestOracleV2;
  }
  connect(signer: Signer): TestOracleV2__factory {
    return super.connect(signer) as TestOracleV2__factory;
  }
  static readonly contractName: "TestOracleV2";
  public readonly contractName: "TestOracleV2";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestOracleV2Interface {
    return new utils.Interface(_abi) as TestOracleV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestOracleV2 {
    return new Contract(address, _abi, signerOrProvider) as TestOracleV2;
  }
}

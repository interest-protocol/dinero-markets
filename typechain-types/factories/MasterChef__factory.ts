/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MasterChef, MasterChefInterface } from "../MasterChef";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract CakeToken",
        name: "_cake",
        type: "address",
      },
      {
        internalType: "contract SyrupBar",
        name: "_syrup",
        type: "address",
      },
      {
        internalType: "address",
        name: "_devaddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_cakePerBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startBlock",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "BONUS_MULTIPLIER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "contract IBEP20",
        name: "_lpToken",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cake",
    outputs: [
      {
        internalType: "contract CakeToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cakePerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_devaddr",
        type: "address",
      },
    ],
    name: "dev",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "devaddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "enterStaking",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "leaveStaking",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "massUpdatePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "migrate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "migrator",
    outputs: [
      {
        internalType: "contract IMigratorChef",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingCake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        internalType: "contract IBEP20",
        name: "lpToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accCakePerShare",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMigratorChef",
        name: "_migrator",
        type: "address",
      },
    ],
    name: "setMigrator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "syrup",
    outputs: [
      {
        internalType: "contract SyrupBar",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "multiplierNumber",
        type: "uint256",
      },
    ],
    name: "updateMultiplier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "updatePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600160055560006009553480156200001b57600080fd5b506040516200221a3803806200221a8339810160408190526200003e91620001c9565b600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600180546001600160a01b03199081166001600160a01b03978816908117835560028054831697891697909717909655600380548216958816959095179094556004928355600a829055604080516080810182529586526103e86020870181815291870193845260006060880181815260078054958601815590915296517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688939095029283018054909616949097169390931790935590517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c689830155517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68a82015590517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68b909101556009556200022e565b6001600160a01b0381168114620001c657600080fd5b50565b600080600080600060a08688031215620001e257600080fd5b8551620001ef81620001b0565b60208701519095506200020281620001b0565b60408701519094506200021581620001b0565b6060870151608090970151959894975095949392505050565b611fdc806200023e6000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80635ffe6146116101045780638d88a90e116100a2578063d49e77cd11610071578063d49e77cd146103ef578063dce1748414610402578063e2bbb15814610415578063f2fde38b1461042857600080fd5b80638d88a90e146103715780638da5cb5b146103845780638dbb1e3a1461039557806393f1a40b146103a857600080fd5b8063715018a6116100de578063715018a6146103225780637cd07e471461032a57806386a952c4146103555780638aa285501461036857600080fd5b80635ffe6146146102f4578063630b5ba11461030757806364482f791461030f57600080fd5b806323cf311811610171578063454b06081161014b578063454b0608146102b257806348cd4cb1146102c557806351eb05a6146102ce5780635312ea8e146102e157600080fd5b806323cf31181461027957806341441d3b1461028c578063441a3e701461029f57600080fd5b80631175a1dd116101ad5780631175a1dd1461020d5780631526fe271461022057806317caf6f11461025d5780631eaaa0451461026657600080fd5b80630755e0b6146101d4578063081e3eda146101f05780631058d281146101f8575b600080fd5b6101dd60045481565b6040519081526020015b60405180910390f35b6007546101dd565b61020b610206366004611cd1565b61043b565b005b6101dd61021b366004611cff565b61061f565b61023361022e366004611cd1565b610784565b604080516001600160a01b03909516855260208501939093529183015260608201526080016101e7565b6101dd60095481565b61020b610274366004611d3d565b6107c8565b61020b610287366004611d7f565b610920565b61020b61029a366004611cd1565b61096c565b61020b6102ad366004611d9c565b610aff565b61020b6102c0366004611cd1565b610ca0565b6101dd600a5481565b61020b6102dc366004611cd1565b610edb565b61020b6102ef366004611cd1565b6110f0565b61020b610302366004611cd1565b611192565b61020b6111c1565b61020b61031d366004611dbe565b6111ec565b61020b6112ce565b60065461033d906001600160a01b031681565b6040516001600160a01b0390911681526020016101e7565b60025461033d906001600160a01b031681565b6101dd60055481565b61020b61037f366004611d7f565b611342565b6000546001600160a01b031661033d565b6101dd6103a3366004611d9c565b6113aa565b6103da6103b6366004611cff565b60086020908152600092835260408084209091529082529020805460019091015482565b604080519283526020830191909152016101e7565b60035461033d906001600160a01b031681565b60015461033d906001600160a01b031681565b61020b610423366004611d9c565b6113c5565b61020b610436366004611d7f565b611521565b6000600760008154811061045157610451611dec565b600091825260208083203384527f5eff886ea0ce6ca488a3d6e336d6c0f75f46d19b42c06ce5ee98e42c96d256c790915260409092208054600490920290920192508311156104dc5760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b60448201526064015b60405180910390fd5b6104e66000610edb565b6000610520826001015461051a64e8d4a510006105148760030154876000015461155790919063ffffffff16565b906115d6565b90611618565b9050801561053257610532338261165a565b831561055c5781546105449085611618565b8255825461055c906001600160a01b031633866116c4565b600383015482546105779164e8d4a510009161051491611557565b6001830155600254604051632770a7eb60e21b8152336004820152602481018690526001600160a01b0390911690639dc29fac90604401600060405180830381600087803b1580156105c857600080fd5b505af11580156105dc573d6000803e3d6000fd5b5050604051868152600092503391507ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568906020015b60405180910390a350505050565b6000806007848154811061063557610635611dec565b600091825260208083208784526008825260408085206001600160a01b038981168752935280852060049485029092016003810154815492516370a0823160e01b8152309681019690965290965091949193919216906370a0823190602401602060405180830381865afa1580156106b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d59190611e02565b90508360020154431180156106e957508015155b1561074f5760006106fe8560020154436113aa565b9050600061072b60095461051488600101546107256004548761155790919063ffffffff16565b90611557565b905061074a610743846105148464e8d4a51000611557565b859061172c565b935050505b610777836001015461051a64e8d4a5100061051486886000015461155790919063ffffffff16565b9450505050505b92915050565b6007818154811061079457600080fd5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b039092169350919084565b6000546001600160a01b031633146107f25760405162461bcd60e51b81526004016104d390611e1b565b8015610800576108006111c1565b6000600a54431161081357600a54610815565b435b600954909150610825908561172c565b600955604080516080810182526001600160a01b0385811682526020820187815292820184815260006060840181815260078054600181018255925293517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688600490920291820180546001600160a01b031916919094161790925592517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68982015591517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68a830155517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68b9091015561091a61178b565b50505050565b6000546001600160a01b0316331461094a5760405162461bcd60e51b81526004016104d390611e1b565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6000600760008154811061098257610982611dec565b600091825260208083203384527f5eff886ea0ce6ca488a3d6e336d6c0f75f46d19b42c06ce5ee98e42c96d256c7909152604083206004909202019250906109c990610edb565b805415610a125760006109fe826001015461051a64e8d4a510006105148760030154876000015461155790919063ffffffff16565b90508015610a1057610a10338261165a565b505b8215610a3e578154610a2f906001600160a01b0316333086611847565b8054610a3b908461172c565b81555b60038201548154610a599164e8d4a510009161051491611557565b60018201556002546040516340c10f1960e01b8152336004820152602481018590526001600160a01b03909116906340c10f1990604401600060405180830381600087803b158015610aaa57600080fd5b505af1158015610abe573d6000803e3d6000fd5b5050604051858152600092503391507f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159060200160405180910390a3505050565b81610b4c5760405162461bcd60e51b815260206004820152601a60248201527f77697468647261772043414b4520627920756e7374616b696e6700000000000060448201526064016104d3565b600060078381548110610b6157610b61611dec565b600091825260208083208684526008825260408085203386529092529220805460049092029092019250831115610bcf5760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b60448201526064016104d3565b610bd884610edb565b6000610c06826001015461051a64e8d4a510006105148760030154876000015461155790919063ffffffff16565b90508015610c1857610c18338261165a565b8315610c42578154610c2a9085611618565b82558254610c42906001600160a01b031633866116c4565b60038301548254610c5d9164e8d4a510009161051491611557565b6001830155604051848152859033907ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689060200160405180910390a35050505050565b6006546001600160a01b0316610cef5760405162461bcd60e51b815260206004820152601460248201527336b4b3b930ba329d1037379036b4b3b930ba37b960611b60448201526064016104d3565b600060078281548110610d0457610d04611dec565b60009182526020822060049182020180546040516370a0823160e01b815230938101939093529093506001600160a01b0316919082906370a0823190602401602060405180830381865afa158015610d60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d849190611e02565b600654909150610da1906001600160a01b0384811691168361187f565b60065460405163ce5494bb60e01b81526001600160a01b038481166004830152600092169063ce5494bb906024016020604051808303816000875af1158015610dee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e129190611e50565b6040516370a0823160e01b81523060048201529091506001600160a01b038216906370a0823190602401602060405180830381865afa158015610e59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7d9190611e02565b8214610eba5760405162461bcd60e51b815260206004820152600c60248201526b1b5a59dc985d194e8818985960a21b60448201526064016104d3565b83546001600160a01b0319166001600160a01b039190911617909255505050565b600060078281548110610ef057610ef0611dec565b9060005260206000209060040201905080600201544311610f0f575050565b80546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610f57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7b9190611e02565b905080610f8d57504360029091015550565b6000610f9d8360020154436113aa565b90506000610fc460095461051486600101546107256004548761155790919063ffffffff16565b6001546003549192506001600160a01b03908116916340c10f199116610feb84600a6115d6565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801561103157600080fd5b505af1158015611045573d6000803e3d6000fd5b50506001546002546040516340c10f1960e01b81526001600160a01b03918216600482015260248101869052911692506340c10f199150604401600060405180830381600087803b15801561109957600080fd5b505af11580156110ad573d6000803e3d6000fd5b505050506110db6110d08461051464e8d4a510008561155790919063ffffffff16565b60038601549061172c565b60038501555050436002909201919091555050565b60006007828154811061110557611105611dec565b6000918252602080832085845260088252604080852033808752935290932080546004909302909301805490945061114a926001600160a01b039190911691906116c4565b8054604051908152839033907fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959060200160405180910390a360008082556001909101555050565b6000546001600160a01b031633146111bc5760405162461bcd60e51b81526004016104d390611e1b565b600555565b60075460005b818110156111e8576111d881610edb565b6111e181611e83565b90506111c7565b5050565b6000546001600160a01b031633146112165760405162461bcd60e51b81526004016104d390611e1b565b8015611224576112246111c1565b611267826112616007868154811061123e5761123e611dec565b90600052602060002090600402016001015460095461161890919063ffffffff16565b9061172c565b60098190555060006007848154811061128257611282611dec565b906000526020600020906004020160010154905082600785815481106112aa576112aa611dec565b90600052602060002090600402016001018190555082811461091a5761091a61178b565b6000546001600160a01b031633146112f85760405162461bcd60e51b81526004016104d390611e1b565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6003546001600160a01b031633146113885760405162461bcd60e51b81526020600482015260096024820152686465763a207775743f60b81b60448201526064016104d3565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6005546000906113be906107258486611618565b9392505050565b816114125760405162461bcd60e51b815260206004820152601760248201527f6465706f7369742043414b45206279207374616b696e6700000000000000000060448201526064016104d3565b60006007838154811061142757611427611dec565b6000918252602080832086845260088252604080852033865290925292206004909102909101915061145884610edb565b8054156114a157600061148d826001015461051a64e8d4a510006105148760030154876000015461155790919063ffffffff16565b9050801561149f5761149f338261165a565b505b82156114cd5781546114be906001600160a01b0316333086611847565b80546114ca908461172c565b81555b600382015481546114e89164e8d4a510009161051491611557565b6001820155604051838152849033907f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1590602001610611565b6000546001600160a01b0316331461154b5760405162461bcd60e51b81526004016104d390611e1b565b61155481611994565b50565b6000826115665750600061077e565b60006115728385611e9e565b90508261157f8583611ebd565b146113be5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016104d3565b60006113be83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611a54565b60006113be83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611a8b565b6002546040516328b9b77360e21b81526001600160a01b038481166004830152602482018490529091169063a2e6ddcc90604401600060405180830381600087803b1580156116a857600080fd5b505af11580156116bc573d6000803e3d6000fd5b505050505050565b6040516001600160a01b03831660248201526044810182905261172790849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611abc565b505050565b6000806117398385611edf565b9050838110156113be5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016104d3565b600754600060015b828110156117e4576117d2600782815481106117b1576117b1611dec565b9060005260206000209060040201600101548361172c90919063ffffffff16565b91506117dd81611e83565b9050611793565b5080156111e8576117f68160036115d6565b905061181381611261600760008154811061123e5761123e611dec565b60098190555080600760008154811061182e5761182e611dec565b9060005260206000209060040201600101819055505050565b6040516001600160a01b038085166024830152831660448201526064810182905261091a9085906323b872dd60e01b906084016116f0565b8015806118f95750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156118d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118f79190611e02565b155b6119645760405162461bcd60e51b815260206004820152603660248201527f5361666542455032303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084016104d3565b6040516001600160a01b03831660248201526044810182905261172790849063095ea7b360e01b906064016116f0565b6001600160a01b0381166119f95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104d3565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60008183611a755760405162461bcd60e51b81526004016104d39190611f23565b506000611a828486611ebd565b95945050505050565b60008184841115611aaf5760405162461bcd60e51b81526004016104d39190611f23565b506000611a828486611f56565b6000611b11826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611b8e9092919063ffffffff16565b8051909150156117275780806020019051810190611b2f9190611f6d565b6117275760405162461bcd60e51b815260206004820152602a60248201527f5361666542455032303a204245503230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016104d3565b6060611b9d8484600085611ba5565b949350505050565b6060611bb085611c98565b611bfc5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104d3565b600080866001600160a01b03168587604051611c189190611f8a565b60006040518083038185875af1925050503d8060008114611c55576040519150601f19603f3d011682016040523d82523d6000602084013e611c5a565b606091505b50915091508115611c6e579150611b9d9050565b805115611c7e5780518082602001fd5b8360405162461bcd60e51b81526004016104d39190611f23565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590611b9d575050151592915050565b600060208284031215611ce357600080fd5b5035919050565b6001600160a01b038116811461155457600080fd5b60008060408385031215611d1257600080fd5b823591506020830135611d2481611cea565b809150509250929050565b801515811461155457600080fd5b600080600060608486031215611d5257600080fd5b833592506020840135611d6481611cea565b91506040840135611d7481611d2f565b809150509250925092565b600060208284031215611d9157600080fd5b81356113be81611cea565b60008060408385031215611daf57600080fd5b50508035926020909101359150565b600080600060608486031215611dd357600080fd5b83359250602084013591506040840135611d7481611d2f565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611e1457600080fd5b5051919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215611e6257600080fd5b81516113be81611cea565b634e487b7160e01b600052601160045260246000fd5b6000600019821415611e9757611e97611e6d565b5060010190565b6000816000190483118215151615611eb857611eb8611e6d565b500290565b600082611eda57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115611ef257611ef2611e6d565b500190565b60005b83811015611f12578181015183820152602001611efa565b8381111561091a5750506000910152565b6020815260008251806020840152611f42816040850160208701611ef7565b601f01601f19169190910160400192915050565b600082821015611f6857611f68611e6d565b500390565b600060208284031215611f7f57600080fd5b81516113be81611d2f565b60008251611f9c818460208701611ef7565b919091019291505056fea26469706673582212202bb9268ed25af1e42d2f1e44183870a250a93cf22bb5e8752e2c3dea1ab8d52c64736f6c634300080a0033";

type MasterChefConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MasterChefConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MasterChef__factory extends ContractFactory {
  constructor(...args: MasterChefConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MasterChef";
  }

  deploy(
    _cake: string,
    _syrup: string,
    _devaddr: string,
    _cakePerBlock: BigNumberish,
    _startBlock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MasterChef> {
    return super.deploy(
      _cake,
      _syrup,
      _devaddr,
      _cakePerBlock,
      _startBlock,
      overrides || {}
    ) as Promise<MasterChef>;
  }
  getDeployTransaction(
    _cake: string,
    _syrup: string,
    _devaddr: string,
    _cakePerBlock: BigNumberish,
    _startBlock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _cake,
      _syrup,
      _devaddr,
      _cakePerBlock,
      _startBlock,
      overrides || {}
    );
  }
  attach(address: string): MasterChef {
    return super.attach(address) as MasterChef;
  }
  connect(signer: Signer): MasterChef__factory {
    return super.connect(signer) as MasterChef__factory;
  }
  static readonly contractName: "MasterChef";
  public readonly contractName: "MasterChef";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MasterChefInterface {
    return new utils.Interface(_abi) as MasterChefInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MasterChef {
    return new Contract(address, _abi, signerOrProvider) as MasterChef;
  }
}

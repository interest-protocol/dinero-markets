/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockVenusToken,
  MockVenusTokenInterface,
} from "../MockVenusToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Borrow",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Redeem",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RedeemUnderlying",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RepayBorrow",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "__addSupply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "__increaseBorrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "err",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "vTokenBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exchangeRateMantissa",
        type: "uint256",
      },
    ],
    name: "__setAccountSnapShot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_accrueInterest",
        type: "uint256",
      },
    ],
    name: "__setAccrueInterest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "__setBalanceOfUnderlying",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_borrowBalanceCurrent",
        type: "uint256",
      },
    ],
    name: "__setBorrowBalanceCurrent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_borrowBalanceStored",
        type: "uint256",
      },
    ],
    name: "__setBorrowBalanceStored",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_borrowRatePerBlock",
        type: "uint256",
      },
    ],
    name: "__setBorrowRatePerBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "__setBorrowReturn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cash",
        type: "uint256",
      },
    ],
    name: "__setCash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "__setCollateralFactor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_exchangeRateCurrent",
        type: "uint256",
      },
    ],
    name: "__setExchangeRateCurrent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_exchangeRateStored",
        type: "uint256",
      },
    ],
    name: "__setExchangeRateStored",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_interestRateModel",
        type: "address",
      },
    ],
    name: "__setInterestRateModel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "__setMintReturn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "__setRedeemReturn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "__setRedeemUnderlyingReturn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "__setRepayReturnValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_reserveFactorMantissa",
        type: "uint256",
      },
    ],
    name: "__setReserveFactorMantissa",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "__setSeize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_supplyRatePerBlock",
        type: "uint256",
      },
    ],
    name: "__setSupplyRatePerBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "__setTotalBorrowsCurrent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_totalReserves",
        type: "uint256",
      },
    ],
    name: "__setTotalReserves",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_underlying",
        type: "address",
      },
    ],
    name: "__setUnderlying",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "_collateralFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accrueInterest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOfUnderlying",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "borrow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "borrowBalanceCurrent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "borrowBalanceStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "borrowRatePerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "exchangeRateCurrent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exchangeRateStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getAccountSnapshot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCash",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "interestRateModel",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "liquidateBorrow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "redeemUnderlying",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "repayBorrow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "repayBorrowBehalf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "reserveFactorMantissa",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "returnValues",
    outputs: [
      {
        internalType: "uint128",
        name: "borrow",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "redeemUnderlying",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "redeem",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "repay",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "mint",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "seize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "supplyRatePerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalBorrowsCurrent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620020ec380380620020ec8339810160408190526200003491620002e9565b8251839083906200004d90600390602085019062000176565b5080516200006390600490602084019062000176565b505050620000816200007a6200008a60201b60201c565b826200008e565b505050620003c0565b3390565b6001600160a01b038216620000e95760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620000fd91906200035c565b90915550506001600160a01b038216600090815260208190526040812080548392906200012c9084906200035c565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001849062000383565b90600052602060002090601f016020900481019282620001a85760008555620001f3565b82601f10620001c357805160ff1916838001178555620001f3565b82800160010185558215620001f3579182015b82811115620001f3578251825591602001919060010190620001d6565b506200020192915062000205565b5090565b5b8082111562000201576000815560010162000206565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200024457600080fd5b81516001600160401b03808211156200026157620002616200021c565b604051601f8301601f19908116603f011681019082821181831017156200028c576200028c6200021c565b81604052838152602092508683858801011115620002a957600080fd5b600091505b83821015620002cd5785820183015181830184015290820190620002ae565b83821115620002df5760008385830101525b9695505050505050565b600080600060608486031215620002ff57600080fd5b83516001600160401b03808211156200031757600080fd5b620003258783880162000232565b945060208601519150808211156200033c57600080fd5b506200034b8682870162000232565b925050604084015190509250925092565b600082198211156200037e57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806200039857607f821691505b60208210811415620003ba57634e487b7160e01b600052602260045260246000fd5b50919050565b611d1c80620003d06000396000f3fe608060405234801561001057600080fd5b50600436106103a45760003560e01c80637f4fde7f116101e9578063ae9d70b01161010f578063db006a75116100ad578063f217c30d1161007c578063f217c30d1461099d578063f3fdb15a146109ba578063f5e3c462146109cd578063f8f9da28146109e457600080fd5b8063db006a75146108d1578063dd62ed3e146108e4578063dddd90461461091d578063e6efc8021461098a57600080fd5b8063c37f68e2116100e9578063c37f68e21461083a578063c5ebeaec1461087b578063cf3e6f5a1461088e578063d34ec5b1146108a157600080fd5b8063ae9d70b014610810578063b2a02ff114610819578063bd6d894d1461083157600080fd5b8063a0712d6811610187578063a6afed9511610156578063a6afed95146107b1578063a9059cbb146107ba578063aa372d21146107cd578063ae86a300146107fd57600080fd5b8063a0712d681461074b578063a1b47bf51461075e578063a1f1069b14610771578063a457c2d71461079e57600080fd5b806393fdc0a6116101c357806393fdc0a6146106e65780639539093f1461071057806395d89b411461072357806395dd91931461072b57600080fd5b80637f4fde7f146106b7578063852a12e3146106ca5780638f840ddd146106dd57600080fd5b8063313ce567116102ce57806361d084781161026c57806370a082311161023b57806370a082311461062557806371d43f511461064e57806373acee981461067e5780637460cd931461068757600080fd5b806361d08478146105935780636499f67c146105bd578063659b7094146105e75780636f307dc3146105fa57600080fd5b80633af9e669116102a85780633af9e6691461052a5780633b1d21a21461054a5780634753f991146105535780635e6f7d421461056657600080fd5b8063313ce567146104f557806339509351146105045780633ae8aacd1461051757600080fd5b8063141eb67d11610346578063182df0f511610315578063182df0f51461049357806323b872dd1461049c5780632608f818146104af57806326312417146104c557600080fd5b8063141eb67d14610459578063173b99041461046257806317bfdfbc1461046b57806318160ddd1461048b57600080fd5b80630e752702116103825780630e752702146103ff578063111a52d91461042057806312501f1314610433578063136bba711461044657600080fd5b8063023bde48146103a957806306fdde03146103be578063095ea7b3146103dc575b600080fd5b6103bc6103b7366004611a2a565b6109ed565b005b6103c6610a54565b6040516103d39190611a6f565b60405180910390f35b6103ef6103ea366004611abe565b610ae6565b60405190151581526020016103d3565b61041261040d366004611a2a565b610afe565b6040519081526020016103d3565b6103bc61042e366004611a2a565b600655565b6103bc610441366004611a2a565b601555565b6103bc610454366004611a2a565b600e55565b61041260185481565b61041260075481565b610412610479366004611ae8565b600f6020526000908152604090205481565b600254610412565b61041260125481565b6103ef6104aa366004611b03565b610b99565b6104126104bd366004611abe565b600092915050565b6103bc6104d3366004611ae8565b601680546001600160a01b0319166001600160a01b0392909216919091179055565b604051600881526020016103d3565b6103ef610512366004611abe565b610bbf565b6103bc610525366004611a2a565b600d55565b610412610538366004611ae8565b60086020526000908152604090205481565b61041260135481565b6103bc610561366004611a2a565b601355565b6103bc610574366004611b3f565b601a80546001600160801b03928316600160801b029216919091179055565b6103bc6105a1366004611abe565b6001600160a01b039091166000908152600f6020526040902055565b6103bc6105cb366004611abe565b6001600160a01b03909116600090815260086020526040902055565b6103bc6105f5366004611a2a565b601855565b60165461060d906001600160a01b031681565b6040516001600160a01b0390911681526020016103d3565b610412610633366004611ae8565b6001600160a01b031660009081526020819052604090205490565b6103bc61065c366004611b3f565b601980546001600160801b0319166001600160801b0392909216919091179055565b61041260175481565b6103bc610695366004611b3f565b601a80546001600160801b0319166001600160801b0392909216919091179055565b6103bc6106c5366004611a2a565b601755565b6104126106d8366004611a2a565b610bfe565b61041260065481565b6103bc6106f4366004611abe565b6001600160a01b03909116600090815260106020526040902055565b6103bc61071e366004611abe565b610ceb565b6103c6610d1c565b610412610739366004611ae8565b60106020526000908152604090205481565b610412610759366004611a2a565b610d2b565b6103bc61076c366004611a2a565b600755565b6103bc61077f366004611b3f565b601980546001600160801b03928316600160801b029216919091179055565b6103ef6107ac366004611abe565b610da2565b61041260145481565b6103ef6107c8366004611abe565b610e44565b6103bc6107db366004611b3f565b601b80546001600160801b0319166001600160801b0392909216919091179055565b6103bc61080b366004611a2a565b601255565b610412600e5481565b610412610827366004611b03565b6015549392505050565b61041260115481565b61085b610848366004611ae8565b600954600a54600b54600c549193509193565b6040805194855260208501939093529183015260608201526080016103d3565b610412610889366004611a2a565b610e52565b6103bc61089c366004611a2a565b601455565b6103bc6108af366004611ae8565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6104126108df366004611a2a565b610f14565b6104126108f2366004611b68565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b601954601a54601b54610950926001600160801b0380821693600160801b92839004821693818316939091048216911685565b604080516001600160801b03968716815294861660208601529285169284019290925283166060830152909116608082015260a0016103d3565b6103bc610998366004611a2a565b601155565b6103bc6109ab366004611b9b565b600993909355600a5550600c55565b60055461060d906001600160a01b031681565b6104126109db366004611bcd565b60009392505050565b610412600d5481565b6016546040516340c10f1960e01b8152306004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b158015610a3957600080fd5b505af1158015610a4d573d6000803e3d6000fd5b5050505050565b606060038054610a6390611c09565b80601f0160208091040260200160405190810160405280929190818152602001828054610a8f90611c09565b8015610adc5780601f10610ab157610100808354040283529160200191610adc565b820191906000526020600020905b815481529060010190602001808311610abf57829003601f168201915b5050505050905090565b600033610af4818585610fe2565b5060019392505050565b601a54600090600160801b90046001600160801b03168015610b205792915050565b601654610b38906001600160a01b0316333086611106565b336000908152600f602052604081208054859290610b57908490611c5a565b90915550506040518381527fa7cd088c151c4ce0e05dea5bbae75d64d6fcd1a318fad88b1641a6e60def6b58906020015b60405180910390a150600092915050565b600033610ba7858285611177565b610bb2858585611203565b60019150505b9392505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190610af49082908690610bf9908790611c71565b610fe2565b601954600090600160801b90046001600160801b03168015610c205792915050565b336000908152600f60209081526040808320546018546008909352922054610c549190610c4e908790611c5a565b906113d1565b10610ce2573360009081526008602052604081208054859290610c78908490611c5a565b9091555050601654610c94906001600160a01b031633856113e6565b610cb233610cad6011548661141b90919063ffffffff16565b611430565b6040518381527ff45aae7ed0930986beb2a233e64eb294db1574dd9084834eeedfa20a4d5fb39990602001610b88565b50600192915050565b6001600160a01b0382166000908152600f602052604081208054839290610d13908490611c71565b90915550505050565b606060048054610a6390611c09565b601b546000906001600160801b03168015610d465792915050565b3360009081526008602052604081208054859290610d65908490611c71565b9091555050601654610d82906001600160a01b0316333086611106565b610d9933601154610d9490869061141b565b61157e565b50600092915050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919083811015610e2c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610e398286868403610fe2565b506001949350505050565b600033610af4818585611203565b6019546000906001600160801b03168015610e6d5792915050565b336000908152600f6020526040902054610e88908490611c71565b60185433600090815260086020526040902054610ea4916113d1565b10610ce257336000908152600f602052604081208054859290610ec8908490611c71565b9091555050601654610ee4906001600160a01b031633856113e6565b6040518381527fb848ae6b1253b6cb77e81464128ce8bd94d3d524fea54e801e0da869784dca3390602001610b88565b601a546000906001600160801b03168015610f2f5792915050565b6000610f46601154856113d190919063ffffffff16565b336000908152600f602090815260408083205460185460089093529220549293509091610f7f9190610f79908590611c5a565b9061141b565b10610af457601654610f9b906001600160a01b031633836113e6565b610fa53385611430565b6040518481527f702d5967f45f6513a38ffc42d6ba9bf230bd40e8f53b16363c7eb4fd2deb9a449060200160405180910390a15060009392505050565b6001600160a01b0383166110445760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610e23565b6001600160a01b0382166110a55760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610e23565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6040516001600160a01b03808516602483015283166044820152606481018290526111719085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261165d565b50505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461117157818110156111f65760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610e23565b6111718484848403610fe2565b6001600160a01b0383166112675760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610e23565b6001600160a01b0382166112c95760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610e23565b6001600160a01b038316600090815260208190526040902054818110156113415760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610e23565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290611378908490611c71565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516113c491815260200190565b60405180910390a3611171565b6000610bb88383670de0b6b3a764000061172f565b6040516001600160a01b03831660248201526044810182905261141690849063a9059cbb60e01b9060640161113a565b505050565b6000610bb883670de0b6b3a76400008461172f565b6001600160a01b0382166114905760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610e23565b6001600160a01b038216600090815260208190526040902054818110156115045760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610e23565b6001600160a01b0383166000908152602081905260408120838303905560028054849290611533908490611c5a565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6001600160a01b0382166115d45760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610e23565b80600260008282546115e69190611c71565b90915550506001600160a01b03821660009081526020819052604081208054839290611613908490611c71565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60006116b2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166118a99092919063ffffffff16565b80519091501561141657808060200190518101906116d09190611c89565b6114165760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610e23565b600080806000198587098587029250828110838203039150508060001415611769576000841161175e57600080fd5b508290049050610bb8565b80841161177557600080fd5b600084868809808403938111909203919050600061179586196001611c71565b86169586900495938490049360008190030460010190506117b68184611cab565b9093179260006117c7876003611cab565b60021890506117d68188611cab565b6117e1906002611c5a565b6117eb9082611cab565b90506117f78188611cab565b611802906002611c5a565b61180c9082611cab565b90506118188188611cab565b611823906002611c5a565b61182d9082611cab565b90506118398188611cab565b611844906002611c5a565b61184e9082611cab565b905061185a8188611cab565b611865906002611c5a565b61186f9082611cab565b905061187b8188611cab565b611886906002611c5a565b6118909082611cab565b905061189c8186611cab565b9998505050505050505050565b60606118b884846000856118c0565b949350505050565b6060824710156119215760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610e23565b6001600160a01b0385163b6119785760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610e23565b600080866001600160a01b031685876040516119949190611cca565b60006040518083038185875af1925050503d80600081146119d1576040519150601f19603f3d011682016040523d82523d6000602084013e6119d6565b606091505b50915091506119e68282866119f1565b979650505050505050565b60608315611a00575081610bb8565b825115611a105782518084602001fd5b8160405162461bcd60e51b8152600401610e239190611a6f565b600060208284031215611a3c57600080fd5b5035919050565b60005b83811015611a5e578181015183820152602001611a46565b838111156111715750506000910152565b6020815260008251806020840152611a8e816040850160208701611a43565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114611ab957600080fd5b919050565b60008060408385031215611ad157600080fd5b611ada83611aa2565b946020939093013593505050565b600060208284031215611afa57600080fd5b610bb882611aa2565b600080600060608486031215611b1857600080fd5b611b2184611aa2565b9250611b2f60208501611aa2565b9150604084013590509250925092565b600060208284031215611b5157600080fd5b81356001600160801b0381168114610bb857600080fd5b60008060408385031215611b7b57600080fd5b611b8483611aa2565b9150611b9260208401611aa2565b90509250929050565b60008060008060808587031215611bb157600080fd5b5050823594602084013594506040840135936060013592509050565b600080600060608486031215611be257600080fd5b611beb84611aa2565b925060208401359150611c0060408501611aa2565b90509250925092565b600181811c90821680611c1d57607f821691505b60208210811415611c3e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015611c6c57611c6c611c44565b500390565b60008219821115611c8457611c84611c44565b500190565b600060208284031215611c9b57600080fd5b81518015158114610bb857600080fd5b6000816000190483118215151615611cc557611cc5611c44565b500290565b60008251611cdc818460208701611a43565b919091019291505056fea2646970667358221220e9429d2d68c2add0ce1bfa47806e662f2e58fe803522e4de6c51abc78f1d9ea864736f6c634300080a0033";

type MockVenusTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockVenusTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockVenusToken__factory extends ContractFactory {
  constructor(...args: MockVenusTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MockVenusToken";
  }

  deploy(
    name: string,
    symbol: string,
    initialSupply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockVenusToken> {
    return super.deploy(
      name,
      symbol,
      initialSupply,
      overrides || {}
    ) as Promise<MockVenusToken>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    initialSupply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      initialSupply,
      overrides || {}
    );
  }
  attach(address: string): MockVenusToken {
    return super.attach(address) as MockVenusToken;
  }
  connect(signer: Signer): MockVenusToken__factory {
    return super.connect(signer) as MockVenusToken__factory;
  }
  static readonly contractName: "MockVenusToken";
  public readonly contractName: "MockVenusToken";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockVenusTokenInterface {
    return new utils.Interface(_abi) as MockVenusTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockVenusToken {
    return new Contract(address, _abi, signerOrProvider) as MockVenusToken;
  }
}

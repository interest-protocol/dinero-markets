/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CakeVault, CakeVaultInterface } from "../CakeVault";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "Compound",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "CAKE",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CAKE_MASTER_CHEF",
    outputs: [
      {
        internalType: "contract IMasterChef",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MARKET",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "compound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getPendingRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getUserPendingRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMasterChef",
        name: "cakeMasterChef",
        type: "address",
      },
      {
        internalType: "contract IERC20Upgradeable",
        name: "cake",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "setMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalRewardsPerAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b506080516122da61004c60003960008181610457015281816104a00152818161063e0152818161067e015261071101526122da6000f3fe60806040526004361061011f5760003560e01c8063715018a6116100a0578063d9621f9e11610064578063d9621f9e14610324578063d9caed1214610339578063f2fde38b14610359578063f46f16c214610379578063f69e20461461039957600080fd5b8063715018a61461029b5780638340f549146102b05780638c3061bf146102d05780638da5cb5b146102e6578063cf7c11fa1461030457600080fd5b8063485cc955116100e7578063485cc955146102135780634ca6ef28146102335780634f1ef2861461025357806352d1902d146102665780636dcea85f1461027b57600080fd5b806312424e3f146101245780631959a0021461013b5780631a39d8ef14610197578063286bf1e2146101bb5780633659cfe6146101f3575b600080fd5b34801561013057600080fd5b506101396103ae565b005b34801561014757600080fd5b50610177610156366004611e8a565b60cc6020526000908152604090208054600182015460029092015490919083565b604080519384526020840192909252908201526060015b60405180910390f35b3480156101a357600080fd5b506101ad60cd5481565b60405190815260200161018e565b3480156101c757600080fd5b5060c9546101db906001600160a01b031681565b6040516001600160a01b03909116815260200161018e565b3480156101ff57600080fd5b5061013961020e366004611e8a565b61044c565b34801561021f57600080fd5b5061013961022e366004611ea7565b610535565b34801561023f57600080fd5b5060ca546101db906001600160a01b031681565b610139610261366004611ef6565b610633565b34801561027257600080fd5b506101ad610704565b34801561028757600080fd5b50610139610296366004611e8a565b6107b7565b3480156102a757600080fd5b50610139610855565b3480156102bc57600080fd5b506101396102cb366004611fba565b610889565b3480156102dc57600080fd5b506101ad60ce5481565b3480156102f257600080fd5b506033546001600160a01b03166101db565b34801561031057600080fd5b506101ad61031f366004611e8a565b610967565b34801561033057600080fd5b506101ad610a1b565b34801561034557600080fd5b50610139610354366004611fba565b610a95565b34801561036557600080fd5b50610139610374366004611e8a565b610bb8565b34801561038557600080fd5b5060cb546101db906001600160a01b031681565b3480156103a557600080fd5b50610139610c50565b60c95460ca54604051636eb1769f60e11b81523060048201526001600160a01b039283166024820181905261044a939092169063dd62ed3e90604401602060405180830381865afa158015610407573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042b9190611ffb565b6104379060001961202a565b60ca546001600160a01b03169190610d6c565b565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561049e5760405162461bcd60e51b815260040161049590612041565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166104e760008051602061225e833981519152546001600160a01b031690565b6001600160a01b03161461050d5760405162461bcd60e51b81526004016104959061208d565b61051681610e57565b6040805160008082526020820190925261053291839190610e81565b50565b600054610100900460ff166105505760005460ff1615610554565b303b155b6105b75760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610495565b600054610100900460ff161580156105d9576000805461ffff19166101011790555b6105e1610fec565b60c980546001600160a01b038086166001600160a01b03199283161790925560ca8054928516929091168217905561061c908460001961101b565b801561062e576000805461ff00191690555b505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561067c5760405162461bcd60e51b815260040161049590612041565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166106c560008051602061225e833981519152546001600160a01b031690565b6001600160a01b0316146106eb5760405162461bcd60e51b81526004016104959061208d565b6106f482610e57565b61070082826001610e81565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107a45760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610495565b5060008051602061225e83398151915290565b6107bf611130565b6001600160a01b0381166107e55760405162461bcd60e51b8152600401610495906120d9565b60cb546001600160a01b0316156108335760405162461bcd60e51b815260206004820152601260248201527115985d5b1d0e88185b1c9958591e481cd95d60721b6044820152606401610495565b60cb80546001600160a01b0319166001600160a01b0392909216919091179055565b6033546001600160a01b0316331461087f5760405162461bcd60e51b815260040161049590612109565b61044a600061115a565b60cb546001600160a01b031633146108d85760405162461bcd60e51b815260206004820152601260248201527115985d5b1d0e881bdb9b1e481b585c9ad95d60721b6044820152606401610495565b600081116109205760405162461bcd60e51b815260206004820152601560248201527415985d5b1d0e881b9bc81e995c9bc8185b5bdd5b9d605a1b6044820152606401610495565b6001600160a01b0383161580159061094057506001600160a01b03821615155b61095c5760405162461bcd60e51b8152600401610495906120d9565b61062e8383836111ac565b60cd546000908061097b5750600092915050565b60ce546001600160a01b038416600090815260cc602090815260408083208151606081018352815481526001820154938101939093526002015490820152906109cc846109c6610a1b565b90611377565b60208301518351919250906109eb906109e5848761213e565b90611393565b6109f5919061202a565b6109ff908661213e565b9450816040015185610a11919061213e565b9695505050505050565b60c954604051631175a1dd60e01b8152600060048201819052306024830152916001600160a01b031690631175a1dd906044015b602060405180830381865afa158015610a6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a909190611ffb565b905090565b60cb546001600160a01b03163314610ae45760405162461bcd60e51b815260206004820152601260248201527115985d5b1d0e881bdb9b1e481b585c9ad95d60721b6044820152606401610495565b60008111610b2c5760405162461bcd60e51b815260206004820152601560248201527415985d5b1d0e881b9bc81e995c9bc8185b5bdd5b9d605a1b6044820152606401610495565b6001600160a01b03831615801590610b4c57506001600160a01b03821615155b610b685760405162461bcd60e51b8152600401610495906120d9565b600060cd5411610bad5760405162461bcd60e51b815260206004820152601060248201526f5661756c743a206e6f20746f6b656e7360801b6044820152606401610495565b61062e8383836113a8565b6033546001600160a01b03163314610be25760405162461bcd60e51b815260040161049590612109565b6001600160a01b038116610c475760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610495565b6105328161115a565b60ce5460cd5460009190610c63836116ee565b610c6d908461213e565b92506000610c828466470de4df820000611393565b9050610c92826109c6838761202a565b610c9c908461213e565b9250610cb53360ca546001600160a01b03169083611776565b60c9546001600160a01b03166341441d3b610cce6117a6565b6040518263ffffffff1660e01b8152600401610cec91815260200190565b600060405180830381600087803b158015610d0657600080fd5b505af1158015610d1a573d6000803e3d6000fd5b50505060ce84905550437f27aaed1e2ace6cfa5a07a3dc6557aed2566349b8a63e8bc208943164c6bb615f610d4f838761202a565b60408051918252602082018590520160405180910390a250505050565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015610dbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de19190611ffb565b610deb919061213e565b6040516001600160a01b038516602482015260448101829052909150610e5190859063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526117d7565b50505050565b6033546001600160a01b031633146105325760405162461bcd60e51b815260040161049590612109565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610eb45761062e836118a9565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610f0e575060408051601f3d908101601f19168201909252610f0b91810190611ffb565b60015b610f715760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610495565b60008051602061225e8339815191528114610fe05760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610495565b5061062e838383611945565b600054610100900460ff166110135760405162461bcd60e51b815260040161049590612156565b61044a61196a565b8015806110955750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa15801561106f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110939190611ffb565b155b6111005760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610495565b6040516001600160a01b03831660248201526044810182905261062e90849063095ea7b360e01b90606401610e1a565b6033546001600160a01b0316331461044a5760405162461bcd60e51b815260040161049590612109565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216600090815260cc6020908152604091829020825160608101845281548152600182015492810192909252600201549181019190915260cd5460ce54811561121057611203826109c661199a565b61120d908261213e565b90505b8251156112485760208301518351611229908390611393565b611233919061202a565b83604001818151611244919061213e565b9052505b611252848361213e565b91508383600001818151611266919061213e565b90525060ca54611281906001600160a01b0316873087611a0e565b60c9546001600160a01b03166341441d3b61129a6117a6565b6040518263ffffffff1660e01b81526004016112b891815260200190565b600060405180830381600087803b1580156112d257600080fd5b505af11580156112e6573d6000803e3d6000fd5b505084516112f79250839150611393565b60208481019182526001600160a01b03878116600081815260cc845260409081902088518155945160018601558088015160029095019490945560cd86905560ce8590559251878152908916917f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62910160405180910390a3505050505050565b600061138c83670de0b6b3a764000084611a46565b9392505050565b600061138c8383670de0b6b3a7640000611a46565b6001600160a01b038316600090815260cc602090815260409182902082516060810184528154808252600183015493820193909352600290910154928101929092528211156114395760405162461bcd60e51b815260206004820152601860248201527f5661756c743a206e6f7420656e6f75676820746f6b656e7300000000000000006044820152606401610495565b60cd5460ce5461144c826109c6866116ee565b611456908261213e565b6020840151845191925060009161146e908490611393565b611478919061202a565b9050611484858461202a565b92508484600001818151611498919061202a565b90525060408401516114aa908261213e565b6000604086018190529091506114be6117a6565b905060006114cc838861213e565b9050818111156115425760c9546001600160a01b0316631058d2816114f1848461202a565b6040518263ffffffff1660e01b815260040161150f91815260200190565b600060405180830381600087803b15801561152957600080fd5b505af115801561153d573d6000803e3d6000fd5b505050505b886001600160a01b0316886001600160a01b031614156115825761157d8861156a898661213e565b60ca546001600160a01b03169190611776565b6115b0565b60ca54611599906001600160a01b03168989611776565b60ca546115b0906001600160a01b03168a85611776565b6000851180156115cf5750670de0b6b3a76400006115cc6117a6565b10155b1561163e5760c9546001600160a01b03166341441d3b6115ed6117a6565b6040518263ffffffff1660e01b815260040161160b91815260200190565b600060405180830381600087803b15801561162557600080fd5b505af1158015611639573d6000803e3d6000fd5b505050505b84156116655760ce8490558551611656908590611393565b602087015260cd85905561167b565b600060cd81905560ce8190556020870181905286525b6001600160a01b03898116600081815260cc60209081526040918290208a5181558a82015160018201558a83015160029091015590518a8152928b16927f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb910160405180910390a3505050505050505050565b6000806116f96117a6565b60c954604051631058d28160e01b8152600481018690529192506001600160a01b031690631058d28190602401600060405180830381600087803b15801561174057600080fd5b505af1158015611754573d6000803e3d6000fd5b5050505082816117626117a6565b61176c919061202a565b61138c919061202a565b6040516001600160a01b03831660248201526044810182905261062e90849063a9059cbb60e01b90606401610e1a565b60ca546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401610a4f565b600061182c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611bc09092919063ffffffff16565b80519091501561062e578080602001905181019061184a91906121a1565b61062e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610495565b6001600160a01b0381163b6119165760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610495565b60008051602061225e83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b61194e83611bd7565b60008251118061195b5750805b1561062e57610e518383611c17565b600054610100900460ff166119915760405162461bcd60e51b815260040161049590612156565b61044a3361115a565b60c9546000906001600160a01b03166341441d3b6119b66117a6565b6040518263ffffffff1660e01b81526004016119d491815260200190565b600060405180830381600087803b1580156119ee57600080fd5b505af1158015611a02573d6000803e3d6000fd5b50505050610a906117a6565b6040516001600160a01b0380851660248301528316604482015260648101829052610e519085906323b872dd60e01b90608401610e1a565b600080806000198587098587029250828110838203039150508060001415611a805760008411611a7557600080fd5b50829004905061138c565b808411611a8c57600080fd5b6000848688098084039381119092039190506000611aac8619600161213e565b8616958690049593849004936000819003046001019050611acd81846121c3565b909317926000611ade8760036121c3565b6002189050611aed81886121c3565b611af890600261202a565b611b0290826121c3565b9050611b0e81886121c3565b611b1990600261202a565b611b2390826121c3565b9050611b2f81886121c3565b611b3a90600261202a565b611b4490826121c3565b9050611b5081886121c3565b611b5b90600261202a565b611b6590826121c3565b9050611b7181886121c3565b611b7c90600261202a565b611b8690826121c3565b9050611b9281886121c3565b611b9d90600261202a565b611ba790826121c3565b9050611bb381866121c3565b9998505050505050505050565b6060611bcf8484600085611d0b565b949350505050565b611be0816118a9565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b611c7f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610495565b600080846001600160a01b031684604051611c9a919061220e565b600060405180830381855af49150503d8060008114611cd5576040519150601f19603f3d011682016040523d82523d6000602084013e611cda565b606091505b5091509150611d02828260405180606001604052806027815260200161227e60279139611e3c565b95945050505050565b606082471015611d6c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610495565b6001600160a01b0385163b611dc35760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610495565b600080866001600160a01b03168587604051611ddf919061220e565b60006040518083038185875af1925050503d8060008114611e1c576040519150601f19603f3d011682016040523d82523d6000602084013e611e21565b606091505b5091509150611e31828286611e3c565b979650505050505050565b60608315611e4b57508161138c565b825115611e5b5782518084602001fd5b8160405162461bcd60e51b8152600401610495919061222a565b6001600160a01b038116811461053257600080fd5b600060208284031215611e9c57600080fd5b813561138c81611e75565b60008060408385031215611eba57600080fd5b8235611ec581611e75565b91506020830135611ed581611e75565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215611f0957600080fd5b8235611f1481611e75565b9150602083013567ffffffffffffffff80821115611f3157600080fd5b818501915085601f830112611f4557600080fd5b813581811115611f5757611f57611ee0565b604051601f8201601f19908116603f01168101908382118183101715611f7f57611f7f611ee0565b81604052828152886020848701011115611f9857600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600080600060608486031215611fcf57600080fd5b8335611fda81611e75565b92506020840135611fea81611e75565b929592945050506040919091013590565b60006020828403121561200d57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008282101561203c5761203c612014565b500390565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6020808252601690820152755661756c743a206e6f207a65726f206164647265737360501b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000821982111561215157612151612014565b500190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000602082840312156121b357600080fd5b8151801515811461138c57600080fd5b60008160001904831182151516156121dd576121dd612014565b500290565b60005b838110156121fd5781810151838201526020016121e5565b83811115610e515750506000910152565b600082516122208184602087016121e2565b9190910192915050565b60208152600082518060208401526122498160408501602087016121e2565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220cbeb6afcbdb2faccccc4d897f5a1443807b4a5a7f29cc7f10d05a62c3b19a58664736f6c634300080a0033";

type CakeVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CakeVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CakeVault__factory extends ContractFactory {
  constructor(...args: CakeVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "CakeVault";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CakeVault> {
    return super.deploy(overrides || {}) as Promise<CakeVault>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CakeVault {
    return super.attach(address) as CakeVault;
  }
  connect(signer: Signer): CakeVault__factory {
    return super.connect(signer) as CakeVault__factory;
  }
  static readonly contractName: "CakeVault";
  public readonly contractName: "CakeVault";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CakeVaultInterface {
    return new utils.Interface(_abi) as CakeVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CakeVault {
    return new Contract(address, _abi, signerOrProvider) as CakeVault;
  }
}

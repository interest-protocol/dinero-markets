/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ReentrantNFTMarketRepay,
  ReentrantNFTMarketRepayInterface,
} from "../ReentrantNFTMarketRepay";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract INFTMarket",
        name: "_contract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Contract",
    outputs: [
      {
        internalType: "contract INFTMarket",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "lenderStartLoan",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161025c38038061025c83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6101c9806100936000396000f3fe60806040526004361061002d5760003560e01c80635af77fff1461009e578063e58b87dd146100da57600080fd5b366100995760008054604051630450cfaf60e31b81526004810183905260248101929092526001600160a01b0316906322867d7890604401600060405180830381600087803b15801561007f57600080fd5b505af1158015610093573d6000803e3d6000fd5b50505050005b600080fd5b3480156100aa57600080fd5b506000546100be906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6100ed6100e836600461015b565b6100ef565b005b60005460405163e58b87dd60e01b81526001600160a01b038481166004830152602482018490529091169063e58b87dd9034906044016000604051808303818588803b15801561013e57600080fd5b505af1158015610152573d6000803e3d6000fd5b50505050505050565b6000806040838503121561016e57600080fd5b82356001600160a01b038116811461018557600080fd5b94602093909301359350505056fea26469706673582212204eb36b52cc7466332edaee765ce825ac0298608de7205e0cfe7c69c74300031564736f6c634300080a0033";

type ReentrantNFTMarketRepayConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReentrantNFTMarketRepayConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReentrantNFTMarketRepay__factory extends ContractFactory {
  constructor(...args: ReentrantNFTMarketRepayConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ReentrantNFTMarketRepay";
  }

  deploy(
    _contract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ReentrantNFTMarketRepay> {
    return super.deploy(
      _contract,
      overrides || {}
    ) as Promise<ReentrantNFTMarketRepay>;
  }
  getDeployTransaction(
    _contract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_contract, overrides || {});
  }
  attach(address: string): ReentrantNFTMarketRepay {
    return super.attach(address) as ReentrantNFTMarketRepay;
  }
  connect(signer: Signer): ReentrantNFTMarketRepay__factory {
    return super.connect(signer) as ReentrantNFTMarketRepay__factory;
  }
  static readonly contractName: "ReentrantNFTMarketRepay";
  public readonly contractName: "ReentrantNFTMarketRepay";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReentrantNFTMarketRepayInterface {
    return new utils.Interface(_abi) as ReentrantNFTMarketRepayInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReentrantNFTMarketRepay {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ReentrantNFTMarketRepay;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockInterestMarketV1,
  MockInterestMarketV1Interface,
} from "../MockInterestMarketV1";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610118806100206000396000f3fe60806040526004361060265760003560e01c8063158ef93e14602b578063439fab91146057575b600080fd5b348015603657600080fd5b5060005460439060ff1681565b604051901515815260200160405180910390f35b607360623660046075565b50506000805460ff19166001179055565b005b60008060208385031215608757600080fd5b823567ffffffffffffffff80821115609e57600080fd5b818501915085601f83011260b157600080fd5b81358181111560bf57600080fd5b86602082850101111560d057600080fd5b6020929092019691955090935050505056fea264697066735822122070e1e909e6542f9ef5c367106a767774016582f174d1521254090293f0944b8264736f6c634300080a0033";

type MockInterestMarketV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockInterestMarketV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockInterestMarketV1__factory extends ContractFactory {
  constructor(...args: MockInterestMarketV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MockInterestMarketV1";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockInterestMarketV1> {
    return super.deploy(overrides || {}) as Promise<MockInterestMarketV1>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockInterestMarketV1 {
    return super.attach(address) as MockInterestMarketV1;
  }
  connect(signer: Signer): MockInterestMarketV1__factory {
    return super.connect(signer) as MockInterestMarketV1__factory;
  }
  static readonly contractName: "MockInterestMarketV1";
  public readonly contractName: "MockInterestMarketV1";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockInterestMarketV1Interface {
    return new utils.Interface(_abi) as MockInterestMarketV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockInterestMarketV1 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockInterestMarketV1;
  }
}

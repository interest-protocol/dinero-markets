/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result, EventFragment } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface MockInterestRateModelInterface extends utils.Interface {
  contractName: "MockInterestRateModel";
  functions: {
    "__setBorrowRate(uint256)": FunctionFragment;
    "__setSupplyRate(uint256)": FunctionFragment;
    "_borrowRate()": FunctionFragment;
    "_supplyRate()": FunctionFragment;
    "getBorrowRate(uint256,uint256,uint256)": FunctionFragment;
    "getSupplyRate(uint256,uint256,uint256,uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "__setBorrowRate",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "__setSupplyRate",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_borrowRate",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "_supplyRate",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getBorrowRate",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getSupplyRate",
    values: [BigNumberish, BigNumberish, BigNumberish, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "__setBorrowRate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "__setSupplyRate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_borrowRate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_supplyRate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBorrowRate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getSupplyRate",
    data: BytesLike
  ): Result;

  events: {
    "BorrowRateArgs(uint256,uint256,uint256)": EventFragment;
    "SupplyRateArgs(uint256,uint256,uint256,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "BorrowRateArgs"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SupplyRateArgs"): EventFragment;
}

export type BorrowRateArgsEvent = TypedEvent<
  [BigNumber, BigNumber, BigNumber],
  { cash: BigNumber; totalBorrow: BigNumber; totalReserves: BigNumber }
>;

export type BorrowRateArgsEventFilter = TypedEventFilter<BorrowRateArgsEvent>;

export type SupplyRateArgsEvent = TypedEvent<
  [BigNumber, BigNumber, BigNumber, BigNumber],
  {
    cash: BigNumber;
    totalBorrow: BigNumber;
    totalReserves: BigNumber;
    mantissa: BigNumber;
  }
>;

export type SupplyRateArgsEventFilter = TypedEventFilter<SupplyRateArgsEvent>;

export interface MockInterestRateModel extends BaseContract {
  contractName: "MockInterestRateModel";
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: MockInterestRateModelInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    __setBorrowRate(
      rate: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    __setSupplyRate(
      rate: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    _borrowRate(overrides?: CallOverrides): Promise<[BigNumber]>;

    _supplyRate(overrides?: CallOverrides): Promise<[BigNumber]>;

    getBorrowRate(
      cash: BigNumberish,
      totalBorrow: BigNumberish,
      totalReserves: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    getSupplyRate(
      cash: BigNumberish,
      totalBorrow: BigNumberish,
      totalReserves: BigNumberish,
      mantissa: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  __setBorrowRate(
    rate: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  __setSupplyRate(
    rate: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  _borrowRate(overrides?: CallOverrides): Promise<BigNumber>;

  _supplyRate(overrides?: CallOverrides): Promise<BigNumber>;

  getBorrowRate(
    cash: BigNumberish,
    totalBorrow: BigNumberish,
    totalReserves: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  getSupplyRate(
    cash: BigNumberish,
    totalBorrow: BigNumberish,
    totalReserves: BigNumberish,
    mantissa: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    __setBorrowRate(
      rate: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    __setSupplyRate(
      rate: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    _borrowRate(overrides?: CallOverrides): Promise<BigNumber>;

    _supplyRate(overrides?: CallOverrides): Promise<BigNumber>;

    getBorrowRate(
      cash: BigNumberish,
      totalBorrow: BigNumberish,
      totalReserves: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getSupplyRate(
      cash: BigNumberish,
      totalBorrow: BigNumberish,
      totalReserves: BigNumberish,
      mantissa: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  filters: {
    "BorrowRateArgs(uint256,uint256,uint256)"(
      cash?: null,
      totalBorrow?: null,
      totalReserves?: null
    ): BorrowRateArgsEventFilter;
    BorrowRateArgs(
      cash?: null,
      totalBorrow?: null,
      totalReserves?: null
    ): BorrowRateArgsEventFilter;

    "SupplyRateArgs(uint256,uint256,uint256,uint256)"(
      cash?: null,
      totalBorrow?: null,
      totalReserves?: null,
      mantissa?: null
    ): SupplyRateArgsEventFilter;
    SupplyRateArgs(
      cash?: null,
      totalBorrow?: null,
      totalReserves?: null,
      mantissa?: null
    ): SupplyRateArgsEventFilter;
  };

  estimateGas: {
    __setBorrowRate(
      rate: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    __setSupplyRate(
      rate: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    _borrowRate(overrides?: CallOverrides): Promise<BigNumber>;

    _supplyRate(overrides?: CallOverrides): Promise<BigNumber>;

    getBorrowRate(
      cash: BigNumberish,
      totalBorrow: BigNumberish,
      totalReserves: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    getSupplyRate(
      cash: BigNumberish,
      totalBorrow: BigNumberish,
      totalReserves: BigNumberish,
      mantissa: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    __setBorrowRate(
      rate: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    __setSupplyRate(
      rate: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    _borrowRate(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    _supplyRate(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getBorrowRate(
      cash: BigNumberish,
      totalBorrow: BigNumberish,
      totalReserves: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    getSupplyRate(
      cash: BigNumberish,
      totalBorrow: BigNumberish,
      totalReserves: BigNumberish,
      mantissa: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
